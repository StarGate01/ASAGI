<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>ASAGI: types::BasicType&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacetypes.xhtml">types</a></li><li class="navelem"><a class="el" href="classtypes_1_1BasicType.xhtml">BasicType</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classtypes_1_1BasicType-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">types::BasicType&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="basictype_8h_source.xhtml">basictype.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for types::BasicType&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classtypes_1_1BasicType__inherit__graph.svg" width="347" height="195"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for types::BasicType&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classtypes_1_1BasicType__coll__graph.svg" width="166" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4eede497d35a738990f579c6f82abe30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#a4eede497d35a738990f579c6f82abe30">check</a> (const <a class="el" href="classio_1_1NetCdfReader.xhtml">io::NetCdfReader</a> &amp;file)</td></tr>
<tr class="separator:a4eede497d35a738990f579c6f82abe30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc445b5f726d586ba8036f8270e3eafb"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#afc445b5f726d586ba8036f8270e3eafb">size</a> () const </td></tr>
<tr class="separator:afc445b5f726d586ba8036f8270e3eafb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56bac15d2b1f75648e5f7e6f31a5768c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#a56bac15d2b1f75648e5f7e6f31a5768c">load</a> (<a class="el" href="classio_1_1NetCdfReader.xhtml">io::NetCdfReader</a> &amp;file, const size_t *offset, const size_t *<a class="el" href="classtypes_1_1BasicType.xhtml#afc445b5f726d586ba8036f8270e3eafb">size</a>, void *buf) const </td></tr>
<tr class="separator:a56bac15d2b1f75648e5f7e6f31a5768c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ce0b8e3f6aead437db3f04463d52eb0"><td class="memItemLeft" align="right" valign="top">virtual MPI_Datatype&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#a4ce0b8e3f6aead437db3f04463d52eb0">getMPIType</a> () const </td></tr>
<tr class="separator:a4ce0b8e3f6aead437db3f04463d52eb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b7fb9c62ab168319e2fb23cc9424ff4"><td class="memTemplParams" colspan="2">template&lt;typename B &gt; </td></tr>
<tr class="memitem:a7b7fb9c62ab168319e2fb23cc9424ff4"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#a7b7fb9c62ab168319e2fb23cc9424ff4">convert</a> (const void *data, B *buf) const </td></tr>
<tr class="separator:a7b7fb9c62ab168319e2fb23cc9424ff4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a09bff1447e3654ff41772fbd8d1e4e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#a7a09bff1447e3654ff41772fbd8d1e4e">convert</a> (const void *data, void *buf) const </td></tr>
<tr class="separator:a7a09bff1447e3654ff41772fbd8d1e4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0617038e11610e9626986426faa4e16"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ad0617038e11610e9626986426faa4e16"><td class="memTemplItemLeft" align="right" valign="top">MPI_Datatype&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#ad0617038e11610e9626986426faa4e16">getMPIType</a> () const</td></tr>
<tr class="separator:ad0617038e11610e9626986426faa4e16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae26be809d13051af2454a34ae3ed0897"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ae26be809d13051af2454a34ae3ed0897"><td class="memTemplItemLeft" align="right" valign="top">MPI_Datatype&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#ae26be809d13051af2454a34ae3ed0897">getMPIType</a> () const</td></tr>
<tr class="separator:ae26be809d13051af2454a34ae3ed0897"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a617a9ee998818ef1bf525176750c697c"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a617a9ee998818ef1bf525176750c697c"><td class="memTemplItemLeft" align="right" valign="top">MPI_Datatype&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#a617a9ee998818ef1bf525176750c697c">getMPIType</a> () const</td></tr>
<tr class="separator:a617a9ee998818ef1bf525176750c697c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1cee055a7f708d8224c084c27b59e21"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:aa1cee055a7f708d8224c084c27b59e21"><td class="memTemplItemLeft" align="right" valign="top">MPI_Datatype&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#aa1cee055a7f708d8224c084c27b59e21">getMPIType</a> () const</td></tr>
<tr class="separator:aa1cee055a7f708d8224c084c27b59e21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55cef3fdb9802c2ec7f632b6f8ec19b1"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a55cef3fdb9802c2ec7f632b6f8ec19b1"><td class="memTemplItemLeft" align="right" valign="top">MPI_Datatype&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classtypes_1_1BasicType.xhtml#a55cef3fdb9802c2ec7f632b6f8ec19b1">getMPIType</a> () const</td></tr>
<tr class="separator:a55cef3fdb9802c2ec7f632b6f8ec19b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classtypes_1_1Type"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classtypes_1_1Type')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classtypes_1_1Type.xhtml">types::Type</a></td></tr>
<tr class="memitem:ae5eb061811b984c874e35e57e0e86215 inherit pub_methods_classtypes_1_1Type"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classtypes_1_1Type.xhtml#ae5eb061811b984c874e35e57e0e86215">~Type</a> ()</td></tr>
<tr class="separator:ae5eb061811b984c874e35e57e0e86215 inherit pub_methods_classtypes_1_1Type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_static_methods_classtypes_1_1Type"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classtypes_1_1Type')"><img src="closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="classtypes_1_1Type.xhtml">types::Type</a></td></tr>
<tr class="memitem:a85bda95db5a174347e34c4c7deb108c3 inherit pro_static_methods_classtypes_1_1Type"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classtypes_1_1Type.xhtml#a85bda95db5a174347e34c4c7deb108c3">copy</a> (const void *data, void *buf, unsigned int <a class="el" href="classtypes_1_1Type.xhtml#af81d967271adf9556b7cec1f3a78fd9b">size</a>)</td></tr>
<tr class="separator:a85bda95db5a174347e34c4c7deb108c3 inherit pro_static_methods_classtypes_1_1Type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class types::BasicType&lt; T &gt;</h3>

<p>Implementation for basic types like int, long, float, double </p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00049">49</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a4eede497d35a738990f579c6f82abe30"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; T &gt;::check </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classio_1_1NetCdfReader.xhtml">io::NetCdfReader</a> &amp;&#160;</td>
          <td class="paramname"><em>file</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check compatibility of the input file with this type. </p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00055">55</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7b7fb9c62ab168319e2fb23cc9424ff4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<div class="memtemplate">
template&lt;typename B &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; T &gt;::convert </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">B *&#160;</td>
          <td class="paramname"><em>buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The value is copied from data to buf, doing transformations between basic types. </p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00085">85</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7a09bff1447e3654ff41772fbd8d1e4e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; T &gt;::convert </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Uses the "no-conversion" function for void pointers </p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00093">93</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4ce0b8e3f6aead437db3f04463d52eb0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual MPI_Datatype <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; T &gt;::getMPIType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The corresponding MPI_Datatype for this type </dd></dl>

<p>Implements <a class="el" href="classtypes_1_1Type.xhtml#a735f6252d36518929741f16ad029d46e">types::Type</a>.</p>

<p>Reimplemented in <a class="el" href="classtypes_1_1StructType.xhtml#adbc4abb20e344de441f0fa610f4db78f">types::StructType&lt; T &gt;</a>, and <a class="el" href="classtypes_1_1ArrayType.xhtml#af757998c9e5877f1353bea37a966428e">types::ArrayType&lt; T &gt;</a>.</p>

</div>
</div>
<a class="anchor" id="ad0617038e11610e9626986426faa4e16"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MPI_Datatype <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; unsigned char &gt;::getMPIType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The corresponding MPI_Datatype for this type </dd></dl>

<p>Implements <a class="el" href="classtypes_1_1Type.xhtml#a735f6252d36518929741f16ad029d46e">types::Type</a>.</p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00101">101</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae26be809d13051af2454a34ae3ed0897"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MPI_Datatype <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; int &gt;::getMPIType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The corresponding MPI_Datatype for this type </dd></dl>

<p>Implements <a class="el" href="classtypes_1_1Type.xhtml#a735f6252d36518929741f16ad029d46e">types::Type</a>.</p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00107">107</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="a617a9ee998818ef1bf525176750c697c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MPI_Datatype <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; long &gt;::getMPIType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The corresponding MPI_Datatype for this type </dd></dl>

<p>Implements <a class="el" href="classtypes_1_1Type.xhtml#a735f6252d36518929741f16ad029d46e">types::Type</a>.</p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00113">113</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa1cee055a7f708d8224c084c27b59e21"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MPI_Datatype <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; float &gt;::getMPIType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The corresponding MPI_Datatype for this type </dd></dl>

<p>Implements <a class="el" href="classtypes_1_1Type.xhtml#a735f6252d36518929741f16ad029d46e">types::Type</a>.</p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00119">119</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="a55cef3fdb9802c2ec7f632b6f8ec19b1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MPI_Datatype <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; double &gt;::getMPIType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The corresponding MPI_Datatype for this type </dd></dl>

<p>Implements <a class="el" href="classtypes_1_1Type.xhtml#a735f6252d36518929741f16ad029d46e">types::Type</a>.</p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00125">125</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="a56bac15d2b1f75648e5f7e6f31a5768c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; T &gt;::load </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classio_1_1NetCdfReader.xhtml">io::NetCdfReader</a> &amp;&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Loads a block form the netCDF file into the buffer </p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00068">68</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<a class="anchor" id="afc445b5f726d586ba8036f8270e3eafb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classtypes_1_1BasicType.xhtml">types::BasicType</a>&lt; T &gt;::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The size of the variable </dd></dl>

<p>Implements <a class="el" href="classtypes_1_1Type.xhtml#af81d967271adf9556b7cec1f3a78fd9b">types::Type</a>.</p>

<p>Reimplemented in <a class="el" href="classtypes_1_1StructType.xhtml#acb7979a18bc4ca37f8750dfdc44637a9">types::StructType&lt; T &gt;</a>.</p>

<p>Definition at line <a class="el" href="basictype_8h_source.xhtml#l00060">60</a> of file <a class="el" href="basictype_8h_source.xhtml">basictype.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>types/<a class="el" href="basictype_8h_source.xhtml">basictype.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
