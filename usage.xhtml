<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>ASAGI: Using ASAGI</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="index.xhtml">index</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">Using ASAGI </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><h2><a class="anchor" id="minexamples"></a>
Minimal examples</h2>
<p>These are minimal C, C++ and Fortran examples that load a 2-dimensional grid and print the value at (0,0). In each case the grid contains floating point values.</p>
<p>C example: </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor">#include &lt;mpi.h&gt;</span>
<span class="preprocessor">#include &lt;<a class="code" href="asagi_8h.xhtml" title="Include file for C and C++ API.">asagi.h</a>&gt;</span>
<span class="preprocessor">#include &lt;stdio.h&gt;</span>

<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>** argv)
{
  MPI_Init(&amp;argc, &amp;argv);
  
  <a class="code" href="classasagi_1_1Grid.xhtml" title="C++ Interface for ASAGI.">grid_handle</a>* grid = <a class="code" href="group__c__interface.xhtml#gaa8773e8d41b980b71f1c2adf67ce4d2e">grid_create</a>(GRID_FLOAT, <a class="code" href="group__c__interface.xhtml#ga4b5314d6889f38daaea793cff555e3f6">GRID_NO_HINT</a>, 1);
  
  <span class="keywordflow">if</span> (<a class="code" href="group__c__interface.xhtml#ga66dbffaed98a91a68c185f41c00a7372">grid_open</a>(grid, <span class="stringliteral">&quot;/path/to/netcdf/file.nc&quot;</span>, 0) != GRID_SUCCESS) {
    printf(<span class="stringliteral">&quot;Could not load file\n&quot;</span>);
    <span class="keywordflow">return</span> 1;
  }
  
  printf(<span class="stringliteral">&quot;Value at (0,0): %f\n&quot;</span>, <a class="code" href="group__c__interface.xhtml#ga23a64b7ba4c798aab21e71622fc2138b">grid_get_float_2d</a>(grid, 0, 0, 0));
  
  <a class="code" href="group__c__interface.xhtml#ga759f54ea82fef68f927a8c6fb928ed96">grid_close</a>(grid);
  
  MPI_Finalize();
  
  <span class="keywordflow">return</span> 0;
}
</pre></div><p>C++ example: </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor">#include &lt;mpi.h&gt;</span>
<span class="preprocessor">#include &lt;<a class="code" href="asagi_8h.xhtml" title="Include file for C and C++ API.">asagi.h</a>&gt;</span>
<span class="preprocessor">#include &lt;iostream&gt;</span>

<span class="keyword">using namespace </span><a class="code" href="classasagi.xhtml" title="ASAGI Fortran Interface.">asagi</a>;

<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>** argv)
{
  MPI_Init(&amp;argc, &amp;argv);
  
  Grid* grid = <a class="code" href="group__cxx__interface.xhtml#gaff001e216efb89b011fe6135d363a944">Grid::create</a>();
  
  <span class="keywordflow">if</span> (grid-&gt;open(<span class="stringliteral">&quot;/path/to/netcdf/file.nc&quot;</span>) != <a class="code" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a69656f79342520e170ee22f4dfcb6d29">Grid::SUCCESS</a>) {
    std::cout &lt;&lt; <span class="stringliteral">&quot;Could not load file&quot;</span> &lt;&lt; std::endl;
    <span class="keywordflow">return</span> 1;
  }
  
  std::cout &lt;&lt; <span class="stringliteral">&quot;Value at (0,0): &quot;</span> &lt;&lt; grid-&gt;getFloat2D(0, 0) &lt;&lt; std::endl;
  
  <span class="comment">// The same as: &quot;Grid::close(grid);&quot;</span>
  <span class="keyword">delete</span> grid;
  
  MPI_Finalize();
  
  <span class="keywordflow">return</span> 0;
}
</pre></div><p>Fortran example: </p>
<div class="fragment"><pre class="fragment"><span class="comment">! You have two options:</span>
<span class="comment">! - Include the module file _once_ in your project:</span>
<span class="comment">!include &#39;asagi.f90&#39;</span>
<span class="comment">! - Compile and link the module file as any other file in your project</span>

<span class="keyword">program</span> minimal
  use <span class="keywordflow">mpi</span>
  use <span class="keywordflow">asagi</span>
  <span class="keyword">implicit none</span>
  
  <span class="keywordtype">integer</span> :: grid_id
  <span class="keywordtype">integer</span> :: error

  call MPI_Init( error )
  
  grid_id = <a class="code" href="group__c__interface.xhtml#gaa8773e8d41b980b71f1c2adf67ce4d2e">grid_create</a>( )

  <span class="keyword">if</span>( <a class="code" href="group__c__interface.xhtml#ga66dbffaed98a91a68c185f41c00a7372">grid_open</a>( grid_id, <span class="stringliteral">&quot;/path/to/netcdf/file.nc&quot;</span> ) /= GRID_SUCCESS ) <span class="keyword">then</span>
    <span class="keyword">write</span> (*,*) <span class="stringliteral">&quot;Could not load file&quot;</span>
    call exit(1)
  <span class="keyword">end if</span>

  <span class="keyword">write</span> (*,*) <span class="stringliteral">&quot;Value at (0,0):&quot;</span>, <a class="code" href="interfaceasagi_1_1grid__get__float.xhtml">grid_get_float</a>( grid_id, 0.d+0, 0.d+0 )

  call <a class="code" href="group__c__interface.xhtml#ga759f54ea82fef68f927a8c6fb928ed96">grid_close</a>( grid_id )

  call MPI_Finalize( error )
<span class="keyword">end program minimal</span>
</pre></div><h2><a class="anchor" id="Dimensions"></a>
Dimensions</h2>
<p>ASAGI supports grids with up to three dimensions. The number of dimension cannot be specified by calling an ASAGI function but depends on the NetCDF input file. For example, to access an integer of a 2-dimensional grid in C++, use <code>getInt2D</code>. For a 3-dimensional grid, the corresponding call is <code>getInt3D</code>.</p>
<h2><a class="anchor" id="lod"></a>
Level of detail</h2>
<p>A grid can have multiple resolutions. Each resolution is identified by a level id (level of detail). If the number of levels is not specified when creating a grid, the grid will contain only one level of detail. In this case you can also omit the level id in all other functions, since level 0 will be used by default. (C does not support default arguments or overloading, therefore omitting arguments is not possible when using the C interface.)</p>
<p>For grids with multiple levels <a class="el" href="group__cxx__interface.xhtml#gab609e54ddac89b43ed5288f352fed556">asagi::Grid::open()</a> must be called once for each level. Several levels can be stored in a single NetCDF file with different variable names. (Use <a class="el" href="group__cxx__interface.xhtml#ga779ff1892a80577dcac971c525054dbf">asagi::Grid::setParam()</a> to specify the variable name.) The coarsest resolution should have the level id 0. With ascending level id, the resolution should get finer. When accessing values with any <code>get</code> function, the level of detail can be selected with the last argument. The function <a class="el" href="group__cxx__interface.xhtml#gaa28e13bf58bc6dc2f86ea3f8c43047c6">asagi::Grid::close()</a> has to be called only once for the whole grid.</p>
<h2><a class="anchor" id="coordinatemapping"></a>
Coordinate mapping</h2>
<p>ASAGI distinguishes between actual coordinates and internal array indexes. All functions, that return a grid value, expect actual coordinates. ASAGI maps each coordinate to an array index using the coordinate variables from the NetCDF file (see section <a class="el" href="usage.xhtml#netcdffiles">NetCDF files</a> on how specify coordinate variables in NetCDF files). If no coordinate variable is available, the mapping is omitted. After the mapping, the coordinate is rounded to the nearest array index. ASAGI does not interpolate between array values.</p>
<p>The actual range of the grid can be obtained with the <code>getMin</code>/<code>getMax</code> functions. They also return coordinates, not array indexes. It is erroneous to access values outside range of the grid.</p>
<p>The range of a dimension can be <img class="formulaInl" alt="$(-\infty,\infty)$" src="form_0.png"/>. This is the case if the size of the dimension in the NetCDF file is one.</p>
<h2><a class="anchor" id="valuepos"></a>
Value position</h2>
<p>ASAGI supports cell-centered and vertex-centered grids. The value position can be switched with <a class="el" href="group__cxx__interface.xhtml#ga779ff1892a80577dcac971c525054dbf">asagi::Grid::setParam()</a>.</p>
<div class="image">
<img src="valueposition.svg" alt="valueposition.svg"/>
<div class="caption">
Cell-centered and vertex-centered grids</div></div>
  <h2><a class="anchor" id="netcdffiles"></a>
NetCDF files</h2>
<p>All NetCDF files opened with ASAGI should respect the COARDS conventions (<a href="http://ferret.wrc.noaa.gov/noaa_coop/coop_cdf_profile.html">http://ferret.wrc.noaa.gov/noaa_coop/coop_cdf_profile.html</a>). However, ASAGI has some further limitations: </p>
<ul>
<li>The attributes <code>scale_factor</code> and <code>add_offset</code> are ignored. Besides conversion between data types, ASAGI does not modify the values. </li>
<li>Since ASAGI does not change the NetCDF file, all values have to be present in the file. Attributes, like <code>_FillValue</code> and <code>missing_value</code>, are not supported. </li>
<li>ASAGI is not aware of any units. It is up to the user of the library to interpret the values correctly. </li>
<li>Variables with more than three dimensions are not supported.</li>
</ul>
<p>It is possible to open a NetCDF file by different grids or levels at the same time. This allows you, for example, to store all levels of one grid in a single NetCDF file. In this case the levels must be distinguished by the variable names.</p>
<h2><a class="anchor" id="multithread"></a>
Multi-thread support</h2>
<p>When compiled with <code>THREADSAFTY=ON</code> (see section <a class="el" href="build.xhtml#Compilation">Compilation</a>) all functions are thread-safe. However, there are some restrictions due to MPI implementations. To receive values from a grid with different threads MPI must support at least <code>MPI_THREAD_SERIALIZED</code>. If you want to <code>open</code> or <code>close</code> several grids at the same time, support for <code>MPI_THREAD_MULTIPLE</code> is required. </p>
</div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
