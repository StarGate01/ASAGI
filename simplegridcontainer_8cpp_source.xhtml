<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>ASAGI: grid/simplegridcontainer.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">grid/simplegridcontainer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="simplegridcontainer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="simplegridcontainer_8h.xhtml">simplegridcontainer.h</a>&quot;</span>
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="grid_8h.xhtml">grid/grid.h</a>&quot;</span>
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00043"></a>00043 
<a name="l00047"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a17abc8ed6476d9e13df035494d663583">00047</a> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a17abc8ed6476d9e13df035494d663583">grid::SimpleGridContainer::SimpleGridContainer</a>(<a class="code" href="group__cxx__interface.xhtml#ga26042863b1e4f739f16b0cdbe5639d9b">asagi::Grid::Type</a> type, <span class="keywordtype">bool</span> isArray,
<a name="l00048"></a>00048         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> hint, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> levels)
<a name="l00049"></a>00049         : <a class="code" href="classgrid_1_1GridContainer.xhtml">GridContainer</a>(type, isArray, hint, levels)
<a name="l00050"></a>00050 {
<a name="l00051"></a>00051         <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#adb8bf060a09c931b183060f88d57430e">m_grids</a> = <span class="keyword">new</span> <a class="code" href="classgrid_1_1Grid.xhtml" title="Base class for a grid.">grid::Grid</a>*[<a class="code" href="classgrid_1_1GridContainer.xhtml#a9bf00e25b72253ffa35d8762e3461285">m_levels</a>];
<a name="l00052"></a>00052 
<a name="l00053"></a>00053         <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; levels; i++)
<a name="l00054"></a>00054                 <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#adb8bf060a09c931b183060f88d57430e">m_grids</a>[i] = <a class="code" href="classgrid_1_1GridContainer.xhtml#a6f7247fb52ab860731772b1a3c9a7365">createGrid</a>(hint, i);
<a name="l00055"></a>00055 }
<a name="l00056"></a>00056 
<a name="l00060"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a1b3a115b27ef99bc958871ed61b06dec">00060</a> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a17abc8ed6476d9e13df035494d663583">grid::SimpleGridContainer::SimpleGridContainer</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> count,
<a name="l00061"></a>00061                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> blockLength[],
<a name="l00062"></a>00062                 <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> displacements[],
<a name="l00063"></a>00063                 <a class="code" href="group__cxx__interface.xhtml#ga26042863b1e4f739f16b0cdbe5639d9b">asagi::Grid::Type</a> types[],
<a name="l00064"></a>00064                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> hint, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> levels)
<a name="l00065"></a>00065         : <a class="code" href="classgrid_1_1GridContainer.xhtml">GridContainer</a>(count, blockLength, displacements, types, hint, levels)
<a name="l00066"></a>00066 {
<a name="l00067"></a>00067         <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#adb8bf060a09c931b183060f88d57430e">m_grids</a> = <span class="keyword">new</span> <a class="code" href="classgrid_1_1Grid.xhtml" title="Base class for a grid.">grid::Grid</a>*[<a class="code" href="classgrid_1_1GridContainer.xhtml#a9bf00e25b72253ffa35d8762e3461285">m_levels</a>];
<a name="l00068"></a>00068         <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; levels; i++)
<a name="l00069"></a>00069                 <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#adb8bf060a09c931b183060f88d57430e">m_grids</a>[i] = <a class="code" href="classgrid_1_1GridContainer.xhtml#a6f7247fb52ab860731772b1a3c9a7365">createGrid</a>(hint, i);
<a name="l00070"></a>00070 }
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 grid::SimpleGridContainer::~SimpleGridContainer()
<a name="l00073"></a>00073 {
<a name="l00074"></a>00074         <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; m_levels; i++)
<a name="l00075"></a>00075                 <span class="keyword">delete</span> m_grids[i];
<a name="l00076"></a>00076         <span class="keyword">delete</span> [] m_grids;
<a name="l00077"></a>00077 }
<a name="l00078"></a>00078 
<a name="l00079"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a0977cd46a3c5a931e20eedd54534da0a">00079</a> <a class="code" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a0977cd46a3c5a931e20eedd54534da0a" title="Changes a grid parameter.">grid::SimpleGridContainer::setParam</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name,
<a name="l00080"></a>00080         <span class="keyword">const</span> <span class="keywordtype">char</span>* value, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00081"></a>00081 {
<a name="l00082"></a>00082         <a class="code" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">Error</a> result;
<a name="l00083"></a>00083         
<a name="l00084"></a>00084         result = <a class="code" href="classgrid_1_1GridContainer.xhtml#af036ea9841472537db66c2367d264a4c" title="Changes a grid parameter.">GridContainer::setParam</a>(name, value, level);
<a name="l00085"></a>00085         <span class="keywordflow">if</span> (result != UNKNOWN_PARAM)
<a name="l00086"></a>00086                 <span class="keywordflow">return</span> result;
<a name="l00087"></a>00087         
<a name="l00088"></a>00088         assert(level &lt; m_levels);
<a name="l00089"></a>00089         <span class="keywordflow">return</span> m_grids[level]-&gt;setParam(name, value);
<a name="l00090"></a>00090 }
<a name="l00091"></a>00091 
<a name="l00092"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a6c22d19a1c5fcbb3496a16c047c3794a">00092</a> <a class="code" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a6c22d19a1c5fcbb3496a16c047c3794a">grid::SimpleGridContainer::open</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename,
<a name="l00093"></a>00093         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00094"></a>00094 {
<a name="l00095"></a>00095         <a class="code" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">Error</a> result;
<a name="l00096"></a>00096         
<a name="l00097"></a>00097         result = <a class="code" href="classgrid_1_1GridContainer.xhtml#a420af1a72437d081b47bdbae44a857f7">GridContainer::open</a>(filename, level);
<a name="l00098"></a>00098         <span class="keywordflow">if</span> (result != SUCCESS)
<a name="l00099"></a>00099                 <span class="keywordflow">return</span> result;
<a name="l00100"></a>00100         
<a name="l00101"></a>00101         result = m_grids[level]-&gt;open(filename);
<a name="l00102"></a>00102         <span class="keywordflow">if</span> (result != SUCCESS)
<a name="l00103"></a>00103                 <span class="keywordflow">return</span> result;
<a name="l00104"></a>00104         
<a name="l00105"></a>00105         m_minX = std::max(m_minX, m_grids[level]-&gt;getXMin());
<a name="l00106"></a>00106         m_minY = std::max(m_minY, m_grids[level]-&gt;getYMin());
<a name="l00107"></a>00107         m_minZ = std::max(m_minZ, m_grids[level]-&gt;getZMin());
<a name="l00108"></a>00108         
<a name="l00109"></a>00109         m_maxX = std::min(m_maxX, m_grids[level]-&gt;getXMax());
<a name="l00110"></a>00110         m_maxY = std::min(m_maxY, m_grids[level]-&gt;getYMax());
<a name="l00111"></a>00111         m_maxZ = std::min(m_maxZ, m_grids[level]-&gt;getZMax());
<a name="l00112"></a>00112         
<a name="l00113"></a>00113         <span class="keywordflow">return</span> result;
<a name="l00114"></a>00114 }
<a name="l00115"></a>00115 
<a name="l00116"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a382af47f250b98bef0964a145cb65e1d">00116</a> <span class="keywordtype">double</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a382af47f250b98bef0964a145cb65e1d">grid::SimpleGridContainer::getXDelta</a>()<span class="keyword"> const</span>
<a name="l00117"></a>00117 <span class="keyword"></span>{
<a name="l00118"></a>00118         <span class="keywordflow">return</span> m_grids[m_levels-1]-&gt;getXDelta();
<a name="l00119"></a>00119 }
<a name="l00120"></a>00120 
<a name="l00121"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#aa3eca27b96beb9be959d66b17391d27e">00121</a> <span class="keywordtype">double</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#aa3eca27b96beb9be959d66b17391d27e">grid::SimpleGridContainer::getYDelta</a>()<span class="keyword"> const</span>
<a name="l00122"></a>00122 <span class="keyword"></span>{
<a name="l00123"></a>00123         <span class="keywordflow">return</span> m_grids[m_levels-1]-&gt;getYDelta();
<a name="l00124"></a>00124 }
<a name="l00125"></a>00125 
<a name="l00126"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#aed2f71f918700b552eb2bf727dabdab2">00126</a> <span class="keywordtype">double</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#aed2f71f918700b552eb2bf727dabdab2">grid::SimpleGridContainer::getZDelta</a>()<span class="keyword"> const</span>
<a name="l00127"></a>00127 <span class="keyword"></span>{
<a name="l00128"></a>00128         <span class="keywordflow">return</span> m_grids[m_levels-1]-&gt;getZDelta();
<a name="l00129"></a>00129 }
<a name="l00130"></a>00130 
<a name="l00131"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a81a49dcc17c6c94421fcb06d539e210b">00131</a> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a81a49dcc17c6c94421fcb06d539e210b">grid::SimpleGridContainer::getByte3D</a>(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y,
<a name="l00132"></a>00132         <span class="keywordtype">double</span> z, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00133"></a>00133 {
<a name="l00134"></a>00134         assert(level &lt; m_levels);
<a name="l00135"></a>00135         
<a name="l00136"></a>00136         <span class="keywordflow">return</span> m_grids[level]-&gt;getByte(x, y, z);
<a name="l00137"></a>00137 }
<a name="l00138"></a>00138 
<a name="l00139"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#aec1034231f0bae9ebf39261bfab0e7a6">00139</a> <span class="keywordtype">int</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#aec1034231f0bae9ebf39261bfab0e7a6">grid::SimpleGridContainer::getInt3D</a>(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y,
<a name="l00140"></a>00140         <span class="keywordtype">double</span> z, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00141"></a>00141 {
<a name="l00142"></a>00142         assert(level &lt; m_levels);
<a name="l00143"></a>00143         
<a name="l00144"></a>00144         <span class="keywordflow">return</span> m_grids[level]-&gt;getInt(x, y, z);
<a name="l00145"></a>00145 }
<a name="l00146"></a>00146 
<a name="l00147"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#abe2830ad86149575eeb6d92f27248cb0">00147</a> <span class="keywordtype">long</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#abe2830ad86149575eeb6d92f27248cb0">grid::SimpleGridContainer::getLong3D</a>(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y,
<a name="l00148"></a>00148         <span class="keywordtype">double</span> z, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00149"></a>00149 {
<a name="l00150"></a>00150         assert(level &lt; m_levels);
<a name="l00151"></a>00151         
<a name="l00152"></a>00152         <span class="keywordflow">return</span> m_grids[level]-&gt;getLong(x, y, z);
<a name="l00153"></a>00153 }
<a name="l00154"></a>00154 
<a name="l00155"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a033ed7c193a40537ce178f429eb9425a">00155</a> <span class="keywordtype">float</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a033ed7c193a40537ce178f429eb9425a">grid::SimpleGridContainer::getFloat3D</a>(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y,
<a name="l00156"></a>00156         <span class="keywordtype">double</span> z, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158         assert(level &lt; m_levels);
<a name="l00159"></a>00159         
<a name="l00160"></a>00160         <span class="keywordflow">return</span> m_grids[level]-&gt;getFloat(x, y, z);
<a name="l00161"></a>00161 }
<a name="l00162"></a>00162 
<a name="l00163"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a1484a162ff130a5206a85184cdd7f1d0">00163</a> <span class="keywordtype">double</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a1484a162ff130a5206a85184cdd7f1d0">grid::SimpleGridContainer::getDouble3D</a>(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> z,
<a name="l00164"></a>00164         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00165"></a>00165 {
<a name="l00166"></a>00166         assert(level &lt; m_levels);
<a name="l00167"></a>00167         
<a name="l00168"></a>00168         <span class="keywordflow">return</span> m_grids[level]-&gt;getDouble(x, y, z);
<a name="l00169"></a>00169 }
<a name="l00170"></a>00170 
<a name="l00171"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#ad169db610e63ccf65efe7f0b5630b984">00171</a> <span class="keywordtype">void</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#ad169db610e63ccf65efe7f0b5630b984">grid::SimpleGridContainer::getBuf3D</a>(<span class="keywordtype">void</span>* buf, <span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> z,
<a name="l00172"></a>00172         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00173"></a>00173 {
<a name="l00174"></a>00174         assert(level &lt; m_levels);
<a name="l00175"></a>00175         
<a name="l00176"></a>00176         m_grids[level]-&gt;getBuf(buf, x, y, z);
<a name="l00177"></a>00177 }
<a name="l00178"></a>00178 
<a name="l00179"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a2f06a0dd23b13087608ef0c54232acf0">00179</a> <span class="keywordtype">bool</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#a2f06a0dd23b13087608ef0c54232acf0">grid::SimpleGridContainer::exportPng</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00180"></a>00180 {
<a name="l00181"></a>00181         assert(level &lt; m_levels);
<a name="l00182"></a>00182         
<a name="l00183"></a>00183         <span class="keywordflow">return</span> m_grids[level]-&gt;exportPng(filename);
<a name="l00184"></a>00184 }
<a name="l00185"></a>00185 
<a name="l00186"></a><a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#afd5e7c330f5c8d52b19d33107d16f5ca">00186</a> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classgrid_1_1SimpleGridContainer.xhtml#afd5e7c330f5c8d52b19d33107d16f5ca">grid::SimpleGridContainer::getCounter</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level)
<a name="l00187"></a>00187 {
<a name="l00188"></a>00188         assert(level &lt; m_levels);
<a name="l00189"></a>00189 
<a name="l00190"></a>00190         <span class="keywordflow">return</span> m_grids[level]-&gt;getCounter(name);
<a name="l00191"></a>00191 }
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
