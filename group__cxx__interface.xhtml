<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>ASAGI: C++ Interface</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">0.5</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">C++ Interface</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++ Interface for ASAGI grids.  <a href="classasagi_1_1Grid.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga26042863b1e4f739f16b0cdbe5639d9b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga26042863b1e4f739f16b0cdbe5639d9b">asagi::Grid::Type</a> { <br />
&#160;&#160;<a class="el" href="group__cxx__interface.xhtml#gga26042863b1e4f739f16b0cdbe5639d9bad29b10d6f6a3a82b2d9760974a559c83">asagi::Grid::BYTE</a>, 
<a class="el" href="group__cxx__interface.xhtml#gga26042863b1e4f739f16b0cdbe5639d9ba09e9b8ddec8e5f1914962764268328b8">asagi::Grid::INT</a>, 
<a class="el" href="group__cxx__interface.xhtml#gga26042863b1e4f739f16b0cdbe5639d9ba5499971c982836fa72fea816ad34cc37">asagi::Grid::LONG</a>, 
<a class="el" href="group__cxx__interface.xhtml#gga26042863b1e4f739f16b0cdbe5639d9ba4ad2d2aa2fbc52541732e920fb160e49">asagi::Grid::FLOAT</a>, 
<br />
&#160;&#160;<a class="el" href="group__cxx__interface.xhtml#gga26042863b1e4f739f16b0cdbe5639d9ba79a1e84cf704ddcfd24555523487c334">asagi::Grid::DOUBLE</a>
<br />
 }</td></tr>
<tr class="separator:ga26042863b1e4f739f16b0cdbe5639d9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1191f4df7554b1b99e515962ebc2bb5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> { <br />
&#160;&#160;<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a69656f79342520e170ee22f4dfcb6d29">asagi::Grid::SUCCESS</a> = 0, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ad70f0e05f5b076e8dd6bc5be37ab9f69">asagi::Grid::MPI_ERROR</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ac13207d41d79441bc172d1ffd69522b6">asagi::Grid::THREAD_ERROR</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a9b866f470380dd87800856e3fc2f4aae">asagi::Grid::NUMA_ERROR</a>, 
<br />
&#160;&#160;<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a8c22b48a4d2426224c3d9d52001ea693">asagi::Grid::UNKNOWN_PARAM</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5aff343faffab82831cdc66ce0f8f4b400">asagi::Grid::INVALID_VALUE</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ad1de55870ea7a06c00e35e66a0cc064a">asagi::Grid::NOT_INITIALIZED</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a15cd796c3a9ee5e49922cf238911cf49">asagi::Grid::ALREADY_INITIALIZED</a>, 
<br />
&#160;&#160;<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a7e8e0ef2b9b8505adf98d9d479349c0e">asagi::Grid::NOT_OPEN</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a76f8d7e5feb2773f99401cc35eef7d43">asagi::Grid::VAR_NOT_FOUND</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ab1057a3562c9eb489bb0932d345f606d">asagi::Grid::WRONG_SIZE</a>, 
<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a91572f88ea95128fc91f150a3542fa66">asagi::Grid::UNSUPPORTED_DIMENSIONS</a>, 
<br />
&#160;&#160;<a class="el" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5af835330b3c4157a99d0a9d6c9032dd20">asagi::Grid::INVALID_VAR_SIZE</a>
<br />
 }</td></tr>
<tr class="separator:gac1191f4df7554b1b99e515962ebc2bb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga2b63ab481f2bfc777ca831bff4e8502c"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga2b63ab481f2bfc777ca831bff4e8502c">asagi::Grid::~Grid</a> ()</td></tr>
<tr class="separator:ga2b63ab481f2bfc777ca831bff4e8502c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d2df6432ce6afb767855ef3f575f85c"><td class="memItemLeft" align="right" valign="top">virtual Error&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga2d2df6432ce6afb767855ef3f575f85c">asagi::Grid::setComm</a> (MPI_Comm comm=MPI_COMM_WORLD)=0</td></tr>
<tr class="separator:ga2d2df6432ce6afb767855ef3f575f85c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c1e0182e9af11e8d0f14d96986de580"><td class="memItemLeft" align="right" valign="top">virtual Error&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga9c1e0182e9af11e8d0f14d96986de580">asagi::Grid::setThreads</a> (unsigned int threads)=0</td></tr>
<tr class="memdesc:ga9c1e0182e9af11e8d0f14d96986de580"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the number of threads in the application.  <a href="#ga9c1e0182e9af11e8d0f14d96986de580">More...</a><br /></td></tr>
<tr class="separator:ga9c1e0182e9af11e8d0f14d96986de580"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7079b291616d0ab9ffa5666ee5c25822"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga7079b291616d0ab9ffa5666ee5c25822">asagi::Grid::setParam</a> (const char *name, const char *value, unsigned int level=0)=0</td></tr>
<tr class="memdesc:ga7079b291616d0ab9ffa5666ee5c25822"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes a grid parameter.  <a href="#ga7079b291616d0ab9ffa5666ee5c25822">More...</a><br /></td></tr>
<tr class="separator:ga7079b291616d0ab9ffa5666ee5c25822"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab609e54ddac89b43ed5288f352fed556"><td class="memItemLeft" align="right" valign="top">virtual Error&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gab609e54ddac89b43ed5288f352fed556">asagi::Grid::open</a> (const char *filename, unsigned int level=0)=0</td></tr>
<tr class="memdesc:gab609e54ddac89b43ed5288f352fed556"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads values from a NetCDF file.  <a href="#gab609e54ddac89b43ed5288f352fed556">More...</a><br /></td></tr>
<tr class="separator:gab609e54ddac89b43ed5288f352fed556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55f03c25f353186444122c576e0f05c4"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga55f03c25f353186444122c576e0f05c4">asagi::Grid::getMin</a> (unsigned int n) const =0</td></tr>
<tr class="separator:ga55f03c25f353186444122c576e0f05c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada74d5b6aa2d5d93ef4ef012b4a80d18"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gada74d5b6aa2d5d93ef4ef012b4a80d18">asagi::Grid::getMax</a> (unsigned int n) const =0</td></tr>
<tr class="separator:gada74d5b6aa2d5d93ef4ef012b4a80d18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02c99d3ffebbabb1d53be13b4d6d56d2"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga02c99d3ffebbabb1d53be13b4d6d56d2">asagi::Grid::getDelta</a> (unsigned int n, unsigned int level=0) const =0</td></tr>
<tr class="separator:ga02c99d3ffebbabb1d53be13b4d6d56d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64421cf13795e1c85e9218c6e3b87515"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga64421cf13795e1c85e9218c6e3b87515">asagi::Grid::getVarSize</a> () const =0</td></tr>
<tr class="separator:ga64421cf13795e1c85e9218c6e3b87515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a9f96c39268b74d8a412ecb6218014f"><td class="memItemLeft" align="right" valign="top">virtual unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga0a9f96c39268b74d8a412ecb6218014f">asagi::Grid::getByte</a> (const double *pos, unsigned int level=0)=0</td></tr>
<tr class="separator:ga0a9f96c39268b74d8a412ecb6218014f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb194a1dd819b62a4d52f5826debcc7a"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gabb194a1dd819b62a4d52f5826debcc7a">asagi::Grid::getInt</a> (const double *pos, unsigned int level=0)=0</td></tr>
<tr class="separator:gabb194a1dd819b62a4d52f5826debcc7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04debdd3a9884ad7266c756333dd623c"><td class="memItemLeft" align="right" valign="top">virtual long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga04debdd3a9884ad7266c756333dd623c">asagi::Grid::getLong</a> (const double *pos, unsigned int level=0)=0</td></tr>
<tr class="separator:ga04debdd3a9884ad7266c756333dd623c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacdb18690519c4df3ee13927998d412d5"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gacdb18690519c4df3ee13927998d412d5">asagi::Grid::getFloat</a> (const double *pos, unsigned int level=0)=0</td></tr>
<tr class="separator:gacdb18690519c4df3ee13927998d412d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0617625c96041c1c732afaf6c2624ed8"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga0617625c96041c1c732afaf6c2624ed8">asagi::Grid::getDouble</a> (const double *pos, unsigned int level=0)=0</td></tr>
<tr class="separator:ga0617625c96041c1c732afaf6c2624ed8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac08815278ed38f43f717201a72c742ce"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gac08815278ed38f43f717201a72c742ce">asagi::Grid::getBuf</a> (void *buf, const double *pos, unsigned int level=0)=0</td></tr>
<tr class="separator:gac08815278ed38f43f717201a72c742ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga78f9b327c51f0d6d0416d75d75369343"><td class="memItemLeft" align="right" valign="top">virtual unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga78f9b327c51f0d6d0416d75d75369343">asagi::Grid::getCounter</a> (const char *name, unsigned int level=0)=0</td></tr>
<tr class="separator:ga78f9b327c51f0d6d0416d75d75369343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4e784761804db6e37ef7b3f6e0892ece"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga4e784761804db6e37ef7b3f6e0892ece">asagi::Grid::create</a> (Type type=FLOAT)</td></tr>
<tr class="separator:ga4e784761804db6e37ef7b3f6e0892ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75e42997d6c956117fc6eb3952fb6e98"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga75e42997d6c956117fc6eb3952fb6e98">asagi::Grid::createArray</a> (Type type=FLOAT)</td></tr>
<tr class="separator:ga75e42997d6c956117fc6eb3952fb6e98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab566aecf321f4d6bd240fa4d9c68f0ac"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gab566aecf321f4d6bd240fa4d9c68f0ac">asagi::Grid::createStruct</a> (unsigned int count, unsigned int blockLength[], unsigned long displacements[], Type types[])</td></tr>
<tr class="separator:gab566aecf321f4d6bd240fa4d9c68f0ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa28e13bf58bc6dc2f86ea3f8c43047c6"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#gaa28e13bf58bc6dc2f86ea3f8c43047c6">asagi::Grid::close</a> (<a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> *grid)</td></tr>
<tr class="separator:gaa28e13bf58bc6dc2f86ea3f8c43047c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0aab15297b382bad7031937533af7974"><td class="memItemLeft" align="right" valign="top">static Error&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga0aab15297b382bad7031937533af7974">asagi::Grid::startCommThread</a> (int schedCPU=-1, MPI_Comm comm=MPI_COMM_WORLD)</td></tr>
<tr class="separator:ga0aab15297b382bad7031937533af7974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91fcbf09ab71b095bbd7f8851af250b3"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga91fcbf09ab71b095bbd7f8851af250b3">asagi::Grid::stopCommThread</a> ()</td></tr>
<tr class="separator:ga91fcbf09ab71b095bbd7f8851af250b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a59f91949d3c0e7fcf4e94581f63072"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cxx__interface.xhtml#ga7a59f91949d3c0e7fcf4e94581f63072">asagi::Grid::nodeLocalRank</a> (MPI_Comm comm=MPI_COMM_WORLD)</td></tr>
<tr class="separator:ga7a59f91949d3c0e7fcf4e94581f63072"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="gac1191f4df7554b1b99e515962ebc2bb5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Possible errors that could occur </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5a69656f79342520e170ee22f4dfcb6d29"></a>SUCCESS&#160;</td><td class="fielddoc">
<p>No error </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5ad70f0e05f5b076e8dd6bc5be37ab9f69"></a>MPI_ERROR&#160;</td><td class="fielddoc">
<p>An MPI function failed </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5ac13207d41d79441bc172d1ffd69522b6"></a>THREAD_ERROR&#160;</td><td class="fielddoc">
<p>A pthread function failed </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5a9b866f470380dd87800856e3fc2f4aae"></a>NUMA_ERROR&#160;</td><td class="fielddoc">
<p>An error in the NUMA detection code </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5a8c22b48a4d2426224c3d9d52001ea693"></a>UNKNOWN_PARAM&#160;</td><td class="fielddoc">
<p>Unknown configuration parameter </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5aff343faffab82831cdc66ce0f8f4b400"></a>INVALID_VALUE&#160;</td><td class="fielddoc">
<p>Invalid configuration value </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5ad1de55870ea7a06c00e35e66a0cc064a"></a>NOT_INITIALIZED&#160;</td><td class="fielddoc">
<p>Function is not yet initialized </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5a15cd796c3a9ee5e49922cf238911cf49"></a>ALREADY_INITIALIZED&#160;</td><td class="fielddoc">
<p>Function already initialized </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5a7e8e0ef2b9b8505adf98d9d479349c0e"></a>NOT_OPEN&#160;</td><td class="fielddoc">
<p>Could not open input file </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5a76f8d7e5feb2773f99401cc35eef7d43"></a>VAR_NOT_FOUND&#160;</td><td class="fielddoc">
<p>netCDF variable not found </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5ab1057a3562c9eb489bb0932d345f606d"></a>WRONG_SIZE&#160;</td><td class="fielddoc">
<p>Wrong variable size in the file </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5a91572f88ea95128fc91f150a3542fa66"></a>UNSUPPORTED_DIMENSIONS&#160;</td><td class="fielddoc">
<p>Unsupported number of dimensions input file </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggac1191f4df7554b1b99e515962ebc2bb5af835330b3c4157a99d0a9d6c9032dd20"></a>INVALID_VAR_SIZE&#160;</td><td class="fielddoc">
<p>Variable size in the input file does not match the type </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="asagi_8h_source.xhtml#l00095">95</a> of file <a class="el" href="asagi_8h_source.xhtml">asagi.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga26042863b1e4f739f16b0cdbe5639d9b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__cxx__interface.xhtml#ga26042863b1e4f739f16b0cdbe5639d9b">asagi::Grid::Type</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The primitive data types supported by ASAGI </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="gga26042863b1e4f739f16b0cdbe5639d9bad29b10d6f6a3a82b2d9760974a559c83"></a>BYTE&#160;</td><td class="fielddoc">
<p>signed byte </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="gga26042863b1e4f739f16b0cdbe5639d9ba09e9b8ddec8e5f1914962764268328b8"></a>INT&#160;</td><td class="fielddoc">
<p>signed 4-byte integer </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="gga26042863b1e4f739f16b0cdbe5639d9ba5499971c982836fa72fea816ad34cc37"></a>LONG&#160;</td><td class="fielddoc">
<p>signed 8-byte integer </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="gga26042863b1e4f739f16b0cdbe5639d9ba4ad2d2aa2fbc52541732e920fb160e49"></a>FLOAT&#160;</td><td class="fielddoc">
<p>4-byte floating point value </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="gga26042863b1e4f739f16b0cdbe5639d9ba79a1e84cf704ddcfd24555523487c334"></a>DOUBLE&#160;</td><td class="fielddoc">
<p>8-byte floating point value </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="asagi_8h_source.xhtml#l00077">77</a> of file <a class="el" href="asagi_8h_source.xhtml">asagi.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gaa28e13bf58bc6dc2f86ea3f8c43047c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void asagi::Grid::close </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> *&#160;</td>
          <td class="paramname"><em>grid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Frees all memory resources associated with <code>grid</code>. After a grid is closed you cannot access any values and you can not reopen another NetCDF file. <br />
 This function does the same as calling <code>delete grid;</code> and it is the C++ equivalent to <a class="el" href="group__c__interface.xhtml#ga4d7e60291ef33ea84718a500314063e6">asagi_grid_close(asagi_grid*)</a> and <a class="el" href="group__f__interface.xhtml#ga1328fd90a5592c8bbe81e81120683ad3">asagi::asagi_grid_close</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">grid</td><td>The grid that should be closed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="asagi_8h_source.xhtml#l00349">349</a> of file <a class="el" href="asagi_8h_source.xhtml">asagi.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga4e784761804db6e37ef7b3f6e0892ece"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> * asagi::Grid::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__cxx__interface.xhtml#ga26042863b1e4f739f16b0cdbe5639d9b">Type</a>&#160;</td>
          <td class="paramname"><em>type</em> = <code><a class="el" href="group__cxx__interface.xhtml#gga26042863b1e4f739f16b0cdbe5639d9ba4ad2d2aa2fbc52541732e920fb160e49">FLOAT</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a new grid containing values with a primitive data type</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of the values in the grid </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="minimal_8cpp-example.xhtml#a2">minimal.cpp</a>.</dd>
</dl>
<p>Definition at line <a class="el" href="asagi_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="asagi_8cpp_source.xhtml">asagi.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ga75e42997d6c956117fc6eb3952fb6e98"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> * asagi::Grid::createArray </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__cxx__interface.xhtml#ga26042863b1e4f739f16b0cdbe5639d9b">Type</a>&#160;</td>
          <td class="paramname"><em>type</em> = <code><a class="el" href="group__cxx__interface.xhtml#gga26042863b1e4f739f16b0cdbe5639d9ba4ad2d2aa2fbc52541732e920fb160e49">FLOAT</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a new grid containing arrays</p>
<p>The length of the arrays is determined by the input file</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of the values in the arrays </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="asagi_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="asagi_8cpp_source.xhtml">asagi.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="gab566aecf321f4d6bd240fa4d9c68f0ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classasagi_1_1Grid.xhtml">asagi::Grid</a> * asagi::Grid::createStruct </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>blockLength</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>displacements</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__cxx__interface.xhtml#ga26042863b1e4f739f16b0cdbe5639d9b">Type</a>&#160;</td>
          <td class="paramname"><em>types</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a new grid containing structured values</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>Number of blocks in the structure </td></tr>
    <tr><td class="paramname">blockLength</td><td>Number of elements in each block </td></tr>
    <tr><td class="paramname">displacements</td><td>Displacement of each block </td></tr>
    <tr><td class="paramname">types</td><td>Primitive types of the blocks </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="asagi_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="asagi_8cpp_source.xhtml">asagi.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="gac08815278ed38f43f717201a72c742ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void asagi::Grid::getBuf </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copys the element at <code>pos</code> into buf. The buffer size has to be (at least) <a class="el" href="group__cxx__interface.xhtml#ga64421cf13795e1c85e9218c6e3b87515">getVarSize()</a> bytes.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>Pointer to the buffer where the data should be written </td></tr>
    <tr><td class="paramname">pos</td><td>The coordinates of the value, the array must have at least the size of the dimension of the grid </td></tr>
    <tr><td class="paramname">level</td><td>The level from which the data should be fetched </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#af97b3ec965da9fc3f503bb7404e1c1a7">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga0a9f96c39268b74d8a412ecb6218014f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned char asagi::Grid::getByte </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>If the grid contains array values, only the first element of the array is returned</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>The coordinates of the value, the array must have at least the size of the dimension of the grid </td></tr>
    <tr><td class="paramname">level</td><td>The level from which the data should be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The element at <code>pos</code> as a char </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#aa4a7f25c4b6688274ee35a600d497688">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga78f9b327c51f0d6d0416d75d75369343"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned long asagi::Grid::getCounter </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets the current value of a counter for a grid level.</p>
<p>See <a class="el" href="usage.xhtml#accesscounter">Access counters</a> for a list of all counters.</p>
<dl class="section return"><dt>Returns</dt><dd>The current counter value or 0 if the name is not defined</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>The performance counters are by default not thread-safe for performance reason. You may get wrong result when using more than one thread. </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a9570bc514d1a358ecb2803a54016ac6c">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga02c99d3ffebbabb1d53be13b4d6d56d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double asagi::Grid::getDelta </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>The dimension </td></tr>
    <tr><td class="paramname">level</td><td>The level for which the difference is requested </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The difference of two coordinates in dimension <code>n</code> </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a448ef291acb809cbdf0dbe549215aa57">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga0617625c96041c1c732afaf6c2624ed8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double asagi::Grid::getDouble </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>The coordinates of the value, the array must have at least the size of the dimension of the grid </td></tr>
    <tr><td class="paramname">level</td><td>The level from which the data should be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The element at <code>pos</code> as a double</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__cxx__interface.xhtml#ga0a9f96c39268b74d8a412ecb6218014f">getByte</a> </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#abf966bec6071c828470a5e0c77c53521">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="gacdb18690519c4df3ee13927998d412d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual float asagi::Grid::getFloat </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>The coordinates of the value, the array must have at least the size of the dimension of the grid </td></tr>
    <tr><td class="paramname">level</td><td>The level from which the data should be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The element at <code>pos</code> as a float</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__cxx__interface.xhtml#ga0a9f96c39268b74d8a412ecb6218014f">getByte</a> </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#aa7023d641e8cbcba8fd5e648cce0cc3f">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="gabb194a1dd819b62a4d52f5826debcc7a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int asagi::Grid::getInt </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>The coordinates of the value, the array must have at least the size of the dimension of the grid </td></tr>
    <tr><td class="paramname">level</td><td>The level from which the data should be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The element at <code>pos</code> as an integer</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__cxx__interface.xhtml#ga0a9f96c39268b74d8a412ecb6218014f">getByte</a> </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#afc8455a85f0725fa21e553bfb78ca3c7">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga04debdd3a9884ad7266c756333dd623c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual long asagi::Grid::getLong </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>The coordinates of the value, the array must have at least the size of the dimension of the grid </td></tr>
    <tr><td class="paramname">level</td><td>The level from which the data should be fetched </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The element at <code>pos</code> as a long</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__cxx__interface.xhtml#ga0a9f96c39268b74d8a412ecb6218014f">getByte</a> </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a2dcef1b1f7b149ae39fa3c73ee0af2eb">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="gada74d5b6aa2d5d93ef4ef012b4a80d18"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double asagi::Grid::getMax </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>The dimension </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The maximum allowed coordinate in dimension <code>n</code> </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a565e50eec02c5da683fee7e55ab17c60">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga55f03c25f353186444122c576e0f05c4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double asagi::Grid::getMin </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>The dimension </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The minimum allowed coordinate in dimension <code>n</code> </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a47eed512112608db2ac6470d7a958f2e">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga64421cf13795e1c85e9218c6e3b87515"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int asagi::Grid::getVarSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of bytes that are stored in each grid cell </dd></dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a3fde465791107ac6a0f7a593b75ed2f8">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga7a59f91949d3c0e7fcf4e94581f63072"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int asagi::Grid::nodeLocalRank </td>
          <td>(</td>
          <td class="paramtype">MPI_Comm&#160;</td>
          <td class="paramname"><em>comm</em> = <code>MPI_COMM_WORLD</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Computes the rank of the process on the node. This function can be used to determine the core, to which the communication threads should be pinned in <a class="el" href="group__cxx__interface.xhtml#ga0aab15297b382bad7031937533af7974">startCommThread</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">comm</td><td>The communicator that should be used </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The node local rank </dd></dl>

<p>Definition at line <a class="el" href="asagi_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="asagi_8cpp_source.xhtml">asagi.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="gab609e54ddac89b43ed5288f352fed556"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Error asagi::Grid::open </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads values from a NetCDF file. </p>
<p>This function must be called for each level of detail. If more than one thread is used, this is a collective function for all threads. </p>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a5a4c10f9408013444df7317f154cecf8">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga2d2df6432ce6afb767855ef3f575f85c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Error asagi::Grid::setComm </td>
          <td>(</td>
          <td class="paramtype">MPI_Comm&#160;</td>
          <td class="paramname"><em>comm</em> = <code>MPI_COMM_WORLD</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Call this function before <a class="el" href="group__cxx__interface.xhtml#gab609e54ddac89b43ed5288f352fed556">open()</a> if the grids should exchange chunks via MPI. </p>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a21373a74eefd53ca1ed279b090828aba">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga7079b291616d0ab9ffa5666ee5c25822"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void asagi::Grid::setParam </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Changes a grid parameter. </p>
<p>This function allows you to change ASAGI's configuration. It must be called before calling <a class="el" href="group__cxx__interface.xhtml#gab609e54ddac89b43ed5288f352fed556">open(const char*, unsigned int)</a>.</p>
<p>See <a class="el" href="usage.xhtml#Parameters">Parameters</a> for a list of supported parameters.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the parameter </td></tr>
    <tr><td class="paramname">value</td><td>The new value for the parameter </td></tr>
    <tr><td class="paramname">level</td><td>Change the parameter for the specified level of detail. <br />
 Should be 0 when setting <b>value-position</b> </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a8b759f7492877ddf8da6e2fa660e59a8">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga9c1e0182e9af11e8d0f14d96986de580"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Error asagi::Grid::setThreads </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>threads</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the number of threads in the application. </p>
<p>This function must be called before <a class="el" href="group__cxx__interface.xhtml#gab609e54ddac89b43ed5288f352fed556">open()</a>. If it is not called, one thread is assumed. </p>

<p>Implemented in <a class="el" href="classgrid_1_1Grid.xhtml#a3db3349cc5a3bc74a86143cf47b499d1">grid::Grid</a>.</p>

</div>
</div>
<a class="anchor" id="ga0aab15297b382bad7031937533af7974"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> asagi::Grid::startCommThread </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>schedCPU</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MPI_Comm&#160;</td>
          <td class="paramname"><em>comm</em> = <code>MPI_COMM_WORLD</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Starts the communication thread. This must be done before a grid with the option <code>MPI_COMMUNICATION = THREAD</code> is opened.</p>
<p>This is a collective operation within <code>comm</code>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">schedCPU</td><td>The id of the CPU on which the communication thread should run. Use negative values to select the last, second last, ... CPU. If the id is invalid, the thread will not be pinned to a CPU. </td></tr>
    <tr><td class="paramname">comm</td><td>The communicator specifying which processes will be involved in any communication </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>SUCCESS</code> or an error </dd></dl>

<p>Definition at line <a class="el" href="asagi_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="asagi_8cpp_source.xhtml">asagi.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ga91fcbf09ab71b095bbd7f8851af250b3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void asagi::Grid::stopCommThread </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Stops the communication thread </p>

<p>Definition at line <a class="el" href="asagi_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="asagi_8cpp_source.xhtml">asagi.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ga2b63ab481f2bfc777ca831bff4e8502c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual asagi::Grid::~Grid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__cxx__interface.xhtml#gaa28e13bf58bc6dc2f86ea3f8c43047c6">close(asagi::Grid*)</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classgrid_1_1Grid.xhtml#ab8715bd1370efe398214bd45c6fc0b34">grid::Grid</a>.</p>

<p>Definition at line <a class="el" href="asagi_8h_source.xhtml#l00130">130</a> of file <a class="el" href="asagi_8h_source.xhtml">asagi.h</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
