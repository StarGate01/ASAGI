<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>ASAGI: mpi/mutex.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">mpi/mutex.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="mutex_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="mutex_8h.xhtml">mutex.h</a>&quot;</span>
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;utils/logger.h&quot;</span>
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="preprocessor">#include &lt;cassert&gt;</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="keyword">using namespace </span>mpi;
<a name="l00045"></a>00045 
<a name="l00051"></a><a class="code" href="classmpi_1_1Mutex.xhtml#acf25f1386aaeb0694617f5d683040115">00051</a> <a class="code" href="classmpi_1_1Mutex.xhtml#acf25f1386aaeb0694617f5d683040115">Mutex::Mutex</a>(<span class="keywordtype">int</span> tag)
<a name="l00052"></a>00052         : m_tag(tag)
<a name="l00053"></a>00053 {
<a name="l00054"></a>00054         <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a> = MPI_WIN_NULL;
<a name="l00055"></a>00055         <a class="code" href="classmpi_1_1Mutex.xhtml#a414059f76b9395b2d3d9052c8c94214d">m_lock</a> = 0L;
<a name="l00056"></a>00056 }
<a name="l00057"></a>00057 
<a name="l00065"></a><a class="code" href="classmpi_1_1Mutex.xhtml#a6e63f9327d5e1f0f79b275021ab67266">00065</a> <a class="code" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> <a class="code" href="classmpi_1_1Mutex.xhtml#a6e63f9327d5e1f0f79b275021ab67266">Mutex::init</a>(MPI_Comm comm)
<a name="l00066"></a>00066 {
<a name="l00067"></a>00067         <span class="keywordtype">size_t</span> windowSize = 0;
<a name="l00068"></a>00068         
<a name="l00069"></a>00069         MPI_Comm_rank(comm, &amp;<a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a>);
<a name="l00070"></a>00070         MPI_Comm_size(comm, &amp;<a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a>);
<a name="l00071"></a>00071         
<a name="l00072"></a>00072         <span class="keywordflow">if</span> (<a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a> == 0)
<a name="l00073"></a>00073                 <span class="comment">// Skip the rand initialization</span>
<a name="l00074"></a>00074                 <span class="comment">// We only want to distribute different mutexes among different</span>
<a name="l00075"></a>00075                 <span class="comment">// ranks. No need for true randomness</span>
<a name="l00076"></a>00076                 <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a> = rand() % <a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a>;
<a name="l00077"></a>00077         
<a name="l00078"></a>00078         <span class="comment">// Distribute to homeRank to all processes</span>
<a name="l00079"></a>00079         <span class="keywordflow">if</span>(MPI_Bcast(&amp;<a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>, 1, MPI_INT, 0, comm) != MPI_SUCCESS)
<a name="l00080"></a>00080                 <span class="keywordflow">return</span> <a class="code" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ad70f0e05f5b076e8dd6bc5be37ab9f69">asagi::Grid::MPI_ERROR</a>;
<a name="l00081"></a>00081         
<a name="l00082"></a>00082         <span class="keywordflow">if</span> (<a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a> == <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>) {
<a name="l00083"></a>00083                 windowSize = <span class="keyword">sizeof</span>(long) * <a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a>;
<a name="l00084"></a>00084                 
<a name="l00085"></a>00085                 <span class="keywordflow">if</span> (MPI_Alloc_mem(windowSize,
<a name="l00086"></a>00086                         MPI_INFO_NULL, &amp;<a class="code" href="classmpi_1_1Mutex.xhtml#a414059f76b9395b2d3d9052c8c94214d">m_lock</a>) != MPI_SUCCESS)
<a name="l00087"></a>00087                         <span class="keywordflow">return</span> <a class="code" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ad70f0e05f5b076e8dd6bc5be37ab9f69">asagi::Grid::MPI_ERROR</a>;
<a name="l00088"></a>00088                 
<a name="l00089"></a>00089                 <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a>; i++) {
<a name="l00090"></a>00090                         <a class="code" href="classmpi_1_1Mutex.xhtml#a414059f76b9395b2d3d9052c8c94214d">m_lock</a>[i] = -1;
<a name="l00091"></a>00091                 }
<a name="l00092"></a>00092         }
<a name="l00093"></a>00093         
<a name="l00094"></a>00094         <span class="keywordflow">if</span> (MPI_Win_create(<a class="code" href="classmpi_1_1Mutex.xhtml#a414059f76b9395b2d3d9052c8c94214d">m_lock</a>,
<a name="l00095"></a>00095                 windowSize,
<a name="l00096"></a>00096                 <span class="keyword">sizeof</span>(<span class="keywordtype">long</span>),
<a name="l00097"></a>00097                 MPI_INFO_NULL,
<a name="l00098"></a>00098                 comm,
<a name="l00099"></a>00099                 &amp;<a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>) != MPI_SUCCESS)
<a name="l00100"></a>00100                 <span class="keywordflow">return</span> <a class="code" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ad70f0e05f5b076e8dd6bc5be37ab9f69">asagi::Grid::MPI_ERROR</a>;
<a name="l00101"></a>00101         
<a name="l00102"></a>00102         <span class="comment">// Create the mpi datatype</span>
<a name="l00103"></a>00103         <span class="keywordtype">int</span> blockLenght[2] = {<a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - <a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a> - 1};
<a name="l00104"></a>00104         <span class="keywordtype">int</span> displacements[2] = {0, <a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a> + 1};
<a name="l00105"></a>00105         <span class="keywordflow">if</span> (MPI_Type_indexed(2, blockLenght, displacements,
<a name="l00106"></a>00106                 MPI_LONG, &amp;<a class="code" href="classmpi_1_1Mutex.xhtml#a7b14b2cfb784dbb270f9dcf44bf10243">m_otherRanksType</a>) != MPI_SUCCESS)
<a name="l00107"></a>00107                 <span class="keywordflow">return</span> <a class="code" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ad70f0e05f5b076e8dd6bc5be37ab9f69">asagi::Grid::MPI_ERROR</a>;
<a name="l00108"></a>00108         <span class="keywordflow">if</span> (MPI_Type_commit(&amp;<a class="code" href="classmpi_1_1Mutex.xhtml#a7b14b2cfb784dbb270f9dcf44bf10243">m_otherRanksType</a>) != MPI_SUCCESS)
<a name="l00109"></a>00109                 <span class="keywordflow">return</span> <a class="code" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5ad70f0e05f5b076e8dd6bc5be37ab9f69">asagi::Grid::MPI_ERROR</a>;
<a name="l00110"></a>00110         
<a name="l00111"></a>00111         <span class="comment">// Safe communicator for send/recv</span>
<a name="l00112"></a>00112         <a class="code" href="classmpi_1_1Mutex.xhtml#af4cfdeadf717ff75c8bfadd144939278">m_comm</a> = comm;
<a name="l00113"></a>00113         
<a name="l00114"></a>00114         <span class="keywordflow">return</span> <a class="code" href="group__cxx__interface.xhtml#ggac1191f4df7554b1b99e515962ebc2bb5a69656f79342520e170ee22f4dfcb6d29">asagi::Grid::SUCCESS</a>;
<a name="l00115"></a>00115 }
<a name="l00116"></a>00116 
<a name="l00120"></a><a class="code" href="classmpi_1_1Mutex.xhtml#ac9e9182407f5f74892318607888e9be4">00120</a> <a class="code" href="classmpi_1_1Mutex.xhtml#ac9e9182407f5f74892318607888e9be4">Mutex::~Mutex</a>()
<a name="l00121"></a>00121 {
<a name="l00122"></a>00122         <span class="keywordflow">if</span> (<a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a> != MPI_WIN_NULL)
<a name="l00123"></a>00123                 MPI_Win_free(&amp;<a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00124"></a>00124         
<a name="l00125"></a>00125         MPI_Free_mem(<a class="code" href="classmpi_1_1Mutex.xhtml#a414059f76b9395b2d3d9052c8c94214d">m_lock</a>);
<a name="l00126"></a>00126         
<a name="l00127"></a>00127         MPI_Type_free(&amp;<a class="code" href="classmpi_1_1Mutex.xhtml#a7b14b2cfb784dbb270f9dcf44bf10243">m_otherRanksType</a>);
<a name="l00128"></a>00128 }
<a name="l00129"></a>00129 
<a name="l00135"></a><a class="code" href="classmpi_1_1Mutex.xhtml#a8387b10636d66194e506b9cd4e3fcf89">00135</a> <span class="keywordtype">void</span> <a class="code" href="classmpi_1_1Mutex.xhtml#a8387b10636d66194e506b9cd4e3fcf89" title="Aquire a lock for a block.">Mutex::acquire</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> block)
<a name="l00136"></a>00136 {
<a name="l00137"></a>00137         <span class="keywordtype">long</span> val = block;
<a name="l00138"></a>00138         <span class="keywordtype">long</span>* lockCopy; lockCopy = <span class="keyword">new</span> <span class="keywordtype">long</span>[<a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - 1];
<a name="l00139"></a>00139         <span class="keywordtype">int</span> i;
<a name="l00140"></a>00140         <span class="keywordtype">int</span> mpiResult; NDBG_UNUSED(mpiResult);
<a name="l00141"></a>00141         
<a name="l00142"></a>00142         <span class="comment">// add self to lock list</span>
<a name="l00143"></a>00143         mpiResult = MPI_Win_lock(MPI_LOCK_EXCLUSIVE, <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>,
<a name="l00144"></a>00144                 0, <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00145"></a>00145         assert(mpiResult == MPI_SUCCESS);
<a name="l00146"></a>00146         
<a name="l00147"></a>00147         mpiResult = MPI_Put(&amp;val,
<a name="l00148"></a>00148                 1, MPI_LONG,
<a name="l00149"></a>00149                 <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a>,
<a name="l00150"></a>00150                 1 , MPI_LONG,
<a name="l00151"></a>00151                 <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00152"></a>00152         assert(mpiResult == MPI_SUCCESS);
<a name="l00153"></a>00153         
<a name="l00154"></a>00154         mpiResult = MPI_Get(lockCopy,
<a name="l00155"></a>00155                 <a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - 1, MPI_LONG,
<a name="l00156"></a>00156                 <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>, 0,
<a name="l00157"></a>00157                 1, <a class="code" href="classmpi_1_1Mutex.xhtml#a7b14b2cfb784dbb270f9dcf44bf10243">m_otherRanksType</a>,
<a name="l00158"></a>00158                 <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00159"></a>00159         assert(mpiResult == MPI_SUCCESS);
<a name="l00160"></a>00160         
<a name="l00161"></a>00161         mpiResult = MPI_Win_unlock(<a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00162"></a>00162         
<a name="l00163"></a>00163         <span class="comment">/* check to see if lock is already held */</span>
<a name="l00164"></a>00164         <span class="keywordflow">for</span> (i = 0; i &lt; (<a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - 1); i ++) {
<a name="l00165"></a>00165                 <span class="keywordflow">if</span> (lockCopy[i] == static_cast&lt;long&gt;(block))
<a name="l00166"></a>00166                         <span class="keywordflow">break</span>;
<a name="l00167"></a>00167         }
<a name="l00168"></a>00168         
<a name="l00169"></a>00169         <span class="keywordflow">if</span> (i &lt; (<a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - 1)) {
<a name="l00170"></a>00170                 <span class="comment">// wait for notification from some other process</span>
<a name="l00171"></a>00171                 mpiResult = MPI_Recv(0L, 0, MPI_BYTE,
<a name="l00172"></a>00172                         MPI_ANY_SOURCE , <a class="code" href="classmpi_1_1Mutex.xhtml#a9b90f8c8fa4ceb5fa8e1293b13773c9c">m_tag</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#af4cfdeadf717ff75c8bfadd144939278">m_comm</a>,
<a name="l00173"></a>00173                         MPI_STATUS_IGNORE);
<a name="l00174"></a>00174                 assert(mpiResult == MPI_SUCCESS);
<a name="l00175"></a>00175         }
<a name="l00176"></a>00176 }
<a name="l00177"></a>00177 
<a name="l00183"></a><a class="code" href="classmpi_1_1Mutex.xhtml#ac84f67b1c16edf716994578d7e0791cb">00183</a> <span class="keywordtype">void</span> <a class="code" href="classmpi_1_1Mutex.xhtml#ac84f67b1c16edf716994578d7e0791cb" title="Release the lock for a block.">Mutex::release</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> block)
<a name="l00184"></a>00184 {
<a name="l00185"></a>00185         <span class="keywordtype">long</span> val = -1;
<a name="l00186"></a>00186         <span class="keywordtype">long</span>* lockCopy; lockCopy = <span class="keyword">new</span> <span class="keywordtype">long</span>[<a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - 1];
<a name="l00187"></a>00187         <span class="keywordtype">int</span> mpiResult; NDBG_UNUSED(mpiResult);
<a name="l00188"></a>00188         
<a name="l00189"></a>00189         <span class="comment">// remove self from waitlist</span>
<a name="l00190"></a>00190         mpiResult = MPI_Win_lock(MPI_LOCK_EXCLUSIVE, <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>,
<a name="l00191"></a>00191                 0, <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00192"></a>00192         assert(mpiResult == MPI_SUCCESS);
<a name="l00193"></a>00193         
<a name="l00194"></a>00194         mpiResult = MPI_Get(lockCopy,
<a name="l00195"></a>00195                 <a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - 1, MPI_LONG,
<a name="l00196"></a>00196                 <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>, 0,
<a name="l00197"></a>00197                 1, <a class="code" href="classmpi_1_1Mutex.xhtml#a7b14b2cfb784dbb270f9dcf44bf10243">m_otherRanksType</a>,
<a name="l00198"></a>00198                 <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00199"></a>00199         assert(mpiResult == MPI_SUCCESS);
<a name="l00200"></a>00200         
<a name="l00201"></a>00201         
<a name="l00202"></a>00202         mpiResult = MPI_Put(&amp;val,
<a name="l00203"></a>00203                 1, MPI_LONG,
<a name="l00204"></a>00204                 <a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a>,
<a name="l00205"></a>00205                 1, MPI_LONG,
<a name="l00206"></a>00206                 <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00207"></a>00207         assert(mpiResult == MPI_SUCCESS);
<a name="l00208"></a>00208         
<a name="l00209"></a>00209         mpiResult = MPI_Win_unlock(<a class="code" href="classmpi_1_1Mutex.xhtml#aa38a885bbd68cce2ea87c5ac2c6e8cbc">m_homeRank</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#ab2f4fd3232d4b0d57ab4d3a00aad0deb">m_window</a>);
<a name="l00210"></a>00210         assert(mpiResult == MPI_SUCCESS);
<a name="l00211"></a>00211         
<a name="l00212"></a>00212         <span class="comment">// find the next rank waiting for the lock (use round robin)</span>
<a name="l00213"></a>00213         <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = <a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a>; i &lt; (<a class="code" href="classmpi_1_1Mutex.xhtml#a874e5ea7d59ba821acb2335049a6f576">m_size</a> - 1); i++) {
<a name="l00214"></a>00214                 <span class="keywordflow">if</span> (lockCopy[i] == static_cast&lt;long&gt;(block)) {
<a name="l00215"></a>00215                         <span class="comment">// Rank is of by one</span>
<a name="l00216"></a>00216                         mpiResult = MPI_Send(0L, 0, MPI_BYTE,
<a name="l00217"></a>00217                                 i+1, <a class="code" href="classmpi_1_1Mutex.xhtml#a9b90f8c8fa4ceb5fa8e1293b13773c9c">m_tag</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#af4cfdeadf717ff75c8bfadd144939278">m_comm</a>);
<a name="l00218"></a>00218                         assert(mpiResult == MPI_SUCCESS);
<a name="l00219"></a>00219                         <span class="keywordflow">return</span>;
<a name="l00220"></a>00220                 }
<a name="l00221"></a>00221         }
<a name="l00222"></a>00222         <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classmpi_1_1Mutex.xhtml#a5fce3c96a606639834acd33e2ebe9d04">m_rank</a>; i++) {
<a name="l00223"></a>00223                 <span class="keywordflow">if</span> (lockCopy[i] == static_cast&lt;long&gt;(block)) {
<a name="l00224"></a>00224                         mpiResult = MPI_Send(0L, 0, MPI_BYTE,
<a name="l00225"></a>00225                                 i, <a class="code" href="classmpi_1_1Mutex.xhtml#a9b90f8c8fa4ceb5fa8e1293b13773c9c">m_tag</a>, <a class="code" href="classmpi_1_1Mutex.xhtml#af4cfdeadf717ff75c8bfadd144939278">m_comm</a>);
<a name="l00226"></a>00226                         assert(mpiResult == MPI_SUCCESS);
<a name="l00227"></a>00227                         <span class="keywordflow">return</span>;
<a name="l00228"></a>00228                 }
<a name="l00229"></a>00229         }
<a name="l00230"></a>00230 }
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
