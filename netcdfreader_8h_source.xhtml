<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>ASAGI: io/netcdfreader.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">io/netcdfreader.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="netcdfreader_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00038"></a>00038 <span class="preprocessor">#ifndef IO_NETCDF_H</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span><span class="preprocessor">#define IO_NETCDF_H</span>
<a name="l00040"></a>00040 <span class="preprocessor"></span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &lt;<a class="code" href="asagi_8h.xhtml" title="Include file for C and C++ API.">asagi.h</a>&gt;</span>
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="constants_8h.xhtml">grid/constants.h</a>&quot;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="preprocessor">#include &lt;cassert&gt;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &lt;limits&gt;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#ifndef ASAGI_NOMPI</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span><span class="preprocessor">#include &lt;mpi.h&gt;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#ifndef MPI_INCLUDED</span>
<a name="l00052"></a>00052 <span class="preprocessor"></span><span class="preprocessor">#define MPI_INCLUDED</span>
<a name="l00053"></a>00053 <span class="preprocessor"></span><span class="preprocessor">#define MPI_INCLUDED_NETCDF</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span><span class="preprocessor">#endif // MPI_INCLUDED</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span><span class="preprocessor">#endif // ASAGI_NOMPI</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span><span class="preprocessor">#include &lt;netcdf.h&gt;</span>
<a name="l00057"></a>00057 <span class="preprocessor">#ifdef MPI_INCLUDED_NETCDF</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span><span class="preprocessor">#undef MPI_INCLUDED</span>
<a name="l00059"></a>00059 <span class="preprocessor"></span><span class="preprocessor">#undef MPI_INCLUDED_NETCDF</span>
<a name="l00060"></a>00060 <span class="preprocessor"></span><span class="preprocessor">#endif // MPI_INCLUDED_NETCDF</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span>
<a name="l00062"></a>00062 <span class="preprocessor">#include &quot;utils/logger.h&quot;</span>
<a name="l00063"></a>00063 
<a name="l00067"></a>00067 <span class="keyword">namespace </span>io
<a name="l00068"></a>00068 {
<a name="l00069"></a>00069 
<a name="l00073"></a><a class="code" href="classio_1_1NetCdfReader.xhtml">00073</a> <span class="keyword">class </span><a class="code" href="classio_1_1NetCdfReader.xhtml">NetCdfReader</a>
<a name="l00074"></a>00074 {
<a name="l00075"></a>00075 <span class="keyword">private</span>:
<a name="l00077"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#aac18597d812d4b331f839bb56ac07539">00077</a>         std::string <a class="code" href="classio_1_1NetCdfReader.xhtml#aac18597d812d4b331f839bb56ac07539">m_filename</a>;
<a name="l00078"></a>00078         
<a name="l00080"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#ab034554ff6c37e813df2d863a5faaaec">00080</a>         <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#ab034554ff6c37e813df2d863a5faaaec">m_rank</a>;
<a name="l00081"></a>00081         
<a name="l00083"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">00083</a>         <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>;
<a name="l00084"></a>00084         
<a name="l00086"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">00086</a>         <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>;
<a name="l00087"></a>00087 
<a name="l00089"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">00089</a>         <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>;
<a name="l00090"></a>00090         
<a name="l00092"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#abeee596fd7a630f0f441e13b31a7236b">00092</a>         std::vector&lt;std::string&gt; <a class="code" href="classio_1_1NetCdfReader.xhtml#abeee596fd7a630f0f441e13b31a7236b">m_names</a>;
<a name="l00093"></a>00093 
<a name="l00095"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#a25a9efb1eb6eeb4af778630f8d3aac77">00095</a>         std::vector&lt;size_t&gt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a25a9efb1eb6eeb4af778630f8d3aac77">m_size</a>;
<a name="l00096"></a>00096 <span class="keyword">public</span>:
<a name="l00097"></a>00097         <a class="code" href="classio_1_1NetCdfReader.xhtml#a9882fb2392440292d50ba0fac22a73a5">NetCdfReader</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename, <span class="keywordtype">int</span> rank);
<a name="l00098"></a>00098         <span class="keyword">virtual</span> ~<a class="code" href="classio_1_1NetCdfReader.xhtml">NetCdfReader</a>();
<a name="l00099"></a>00099         
<a name="l00100"></a>00100         <a class="code" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> <a class="code" href="classio_1_1NetCdfReader.xhtml#ac32833419444f4454aae03c783cbfe6c">open</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* varname = <span class="stringliteral">&quot;z&quot;</span>);
<a name="l00101"></a>00101         
<a name="l00106"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#afff7b97428069e57783c3984951058b5">00106</a>         <span class="keywordtype">bool</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#afff7b97428069e57783c3984951058b5">isOpen</a>()<span class="keyword"> const</span>
<a name="l00107"></a>00107 <span class="keyword">        </span>{
<a name="l00108"></a>00108                 <span class="keywordflow">return</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a> &lt; 0;
<a name="l00109"></a>00109         }
<a name="l00110"></a>00110         
<a name="l00114"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#ad1d53000705c296517ce51231472cddb">00114</a>         <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#ad1d53000705c296517ce51231472cddb">getDimensions</a>()<span class="keyword"> const</span>
<a name="l00115"></a>00115 <span class="keyword">        </span>{
<a name="l00116"></a>00116                 <span class="keywordflow">return</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>;
<a name="l00117"></a>00117         }
<a name="l00118"></a>00118         
<a name="l00122"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">00122</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(<span class="keywordtype">int</span> i)<span class="keyword"> const</span>
<a name="l00123"></a>00123 <span class="keyword">        </span>{
<a name="l00124"></a>00124                 <span class="keywordflow">if</span> (i &gt;= <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>)
<a name="l00125"></a>00125                         <span class="keywordflow">return</span> 1;
<a name="l00126"></a>00126                 <span class="keywordflow">return</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a25a9efb1eb6eeb4af778630f8d3aac77">m_size</a>[i];
<a name="l00127"></a>00127         }
<a name="l00128"></a>00128         
<a name="l00132"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#aade32be70ae583d4ab0785469540f246">00132</a>         <span class="keywordtype">double</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#aade32be70ae583d4ab0785469540f246">getOffset</a>(<span class="keywordtype">int</span> i)<span class="keyword"> const</span>
<a name="l00133"></a>00133 <span class="keyword">        </span>{
<a name="l00134"></a>00134                 <span class="keywordflow">if</span> (i &gt;= <a class="code" href="classio_1_1NetCdfReader.xhtml#ad1d53000705c296517ce51231472cddb">getDimensions</a>())
<a name="l00135"></a>00135                         <span class="keywordflow">return</span> 0;
<a name="l00136"></a>00136 
<a name="l00137"></a>00137                 <span class="keywordtype">int</span> x;
<a name="l00138"></a>00138                 <span class="keywordflow">if</span> (nc_inq_varid(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#abeee596fd7a630f0f441e13b31a7236b">m_names</a>[i].c_str(), &amp;x) != NC_NOERR)
<a name="l00139"></a>00139                         <span class="keywordflow">return</span> 0;
<a name="l00140"></a>00140 
<a name="l00141"></a>00141                 <span class="keywordtype">double</span> result;
<a name="l00142"></a>00142                 <span class="keywordtype">size_t</span> index = 0;
<a name="l00143"></a>00143                 nc_get_var1_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, x, &amp;index, &amp;result);
<a name="l00144"></a>00144                 <span class="keywordflow">return</span> result;
<a name="l00145"></a>00145         }
<a name="l00146"></a>00146         
<a name="l00151"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#a9abeef82ea162ea83746093a048ea4ab">00151</a>         <span class="keywordtype">double</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a9abeef82ea162ea83746093a048ea4ab">getScaling</a>(<span class="keywordtype">int</span> i)<span class="keyword"> const</span>
<a name="l00152"></a>00152 <span class="keyword">        </span>{
<a name="l00153"></a>00153                 <span class="keywordflow">if</span> (i &gt;= <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>)
<a name="l00154"></a>00154                         <span class="keywordflow">return</span> 0.;
<a name="l00155"></a>00155         
<a name="l00156"></a>00156                 <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> size = <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(i);
<a name="l00157"></a>00157                 <span class="keywordflow">if</span> (size == 1)
<a name="l00158"></a>00158                         <span class="keywordflow">return</span> std::numeric_limits&lt;double&gt;::infinity();
<a name="l00159"></a>00159                 
<a name="l00160"></a>00160                 <span class="keywordtype">int</span> x;
<a name="l00161"></a>00161                 <span class="keywordflow">if</span> (nc_inq_varid(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#abeee596fd7a630f0f441e13b31a7236b">m_names</a>[i].c_str(), &amp;x) != NC_NOERR)
<a name="l00162"></a>00162                         <span class="keywordflow">return</span> 1;
<a name="l00163"></a>00163 
<a name="l00164"></a>00164                 <span class="keywordtype">double</span> first, last;
<a name="l00165"></a>00165                 <span class="keywordtype">size_t</span> index = 0;
<a name="l00166"></a>00166                 nc_get_var1_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, x, &amp;index, &amp;first);
<a name="l00167"></a>00167                 index = size - 1;
<a name="l00168"></a>00168                 nc_get_var1_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, x, &amp;index, &amp;last);
<a name="l00169"></a>00169         
<a name="l00170"></a>00170                 <span class="keywordflow">return</span> (last - first) / (size - 1);
<a name="l00171"></a>00171         }
<a name="l00172"></a>00172         
<a name="l00182"></a>00182         <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;
<a name="l00183"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#a662efad5046abfec9dc52455a74f1e0a">00183</a>         <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a662efad5046abfec9dc52455a74f1e0a" title="Reads a block of cells from the netcdf file. The type is converted to T.">getBlock</a>(<span class="keywordtype">void</span> *block,
<a name="l00184"></a>00184                 <span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset,
<a name="l00185"></a>00185                 <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size)
<a name="l00186"></a>00186         {
<a name="l00187"></a>00187                 <span class="comment">// The netCDF standard (Coords convention) uses Fortran</span>
<a name="l00188"></a>00188                 <span class="comment">// dimension ordering -&gt; reverse offset and size arrays</span>
<a name="l00189"></a>00189                 <span class="keywordtype">size_t</span> actOffset[<a class="code" href="namespacegrid.xhtml#a0dd0b72f0e9d3b80da7f42d4af9a1ca8">grid::MAX_DIMENSIONS</a>];
<a name="l00190"></a>00190                 std::reverse_copy(offset, offset+<a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>, actOffset);
<a name="l00191"></a>00191                 <span class="keywordtype">size_t</span> actSize[<a class="code" href="namespacegrid.xhtml#a0dd0b72f0e9d3b80da7f42d4af9a1ca8">grid::MAX_DIMENSIONS</a>];
<a name="l00192"></a>00192                 std::reverse_copy(size, size+<a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>, actSize);
<a name="l00193"></a>00193 
<a name="l00194"></a>00194                 <span class="comment">// Make sure we do not read more than the available data</span>
<a name="l00195"></a>00195                 <span class="comment">// in each dimension</span>
<a name="l00196"></a>00196                 <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>; i++) {
<a name="l00197"></a>00197                         <span class="keywordflow">if</span> (actOffset[i] + actSize[i] &gt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(m_dimensions-i-1))
<a name="l00198"></a>00198                                 actSize[i] = <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(m_dimensions-i-1) - actOffset[i];
<a name="l00199"></a>00199                 }
<a name="l00200"></a>00200 
<a name="l00201"></a>00201                 <span class="comment">// The distance between 2 values in the internal representation</span>
<a name="l00202"></a>00202                 ptrdiff_t imap[<a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>];
<a name="l00203"></a>00203                 imap[m_dimensions-1] = getBasicSize&lt;T&gt;();
<a name="l00204"></a>00204                 <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = m_dimensions-2; i &gt;= 0; i--)
<a name="l00205"></a>00205                         imap[i] = imap[i+1] * size[m_dimensions-i-1];
<a name="l00206"></a>00206 
<a name="l00207"></a>00207                 <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">getVar</a>(actOffset, actSize, imap,
<a name="l00208"></a>00208                         static_cast&lt;T*&gt;(block));
<a name="l00209"></a>00209         }
<a name="l00210"></a>00210         
<a name="l00214"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">00214</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">getVarSize</a>()<span class="keyword"> const</span>
<a name="l00215"></a>00215 <span class="keyword">        </span>{
<a name="l00216"></a>00216                 nc_type type;
<a name="l00217"></a>00217                 nc_inq_vartype(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, &amp;type);
<a name="l00218"></a>00218                 <span class="keywordtype">size_t</span> size;
<a name="l00219"></a>00219                 nc_inq_type(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, type, 0L, &amp;size);
<a name="l00220"></a>00220 
<a name="l00221"></a>00221                 <span class="keywordflow">return</span> size;
<a name="l00222"></a>00222         }
<a name="l00223"></a>00223         
<a name="l00224"></a>00224 <span class="keyword">private</span>:
<a name="l00228"></a>00228         <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;
<a name="l00229"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#aed6afa15f041176cd2568a2da1c60e08">00229</a>         <span class="keywordtype">size_t</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#aed6afa15f041176cd2568a2da1c60e08">getBasicSize</a>()
<a name="l00230"></a>00230         {
<a name="l00231"></a>00231                 <span class="keywordflow">return</span> 1;
<a name="l00232"></a>00232         }
<a name="l00233"></a>00233 
<a name="l00237"></a>00237         <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;
<a name="l00238"></a>00238         <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,
<a name="l00239"></a>00239                 <span class="keyword">const</span> ptrdiff_t *imap, T *buffer);
<a name="l00240"></a>00240 
<a name="l00241"></a>00241 <span class="keyword">private</span>:
<a name="l00242"></a><a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">00242</a>         <span class="keyword">static</span> <span class="keyword">const</span> ptrdiff_t <a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">STRIDE</a>[<a class="code" href="namespacegrid.xhtml#a0dd0b72f0e9d3b80da7f42d4af9a1ca8">grid::MAX_DIMENSIONS</a>];
<a name="l00243"></a>00243 };
<a name="l00244"></a>00244 
<a name="l00245"></a>00245 <span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span>
<a name="l00246"></a>00246 <span class="keywordtype">size_t</span> NetCdfReader::getBasicSize&lt;void&gt;()
<a name="l00247"></a>00247 {
<a name="l00248"></a>00248         <span class="keywordflow">return</span> getVarSize();
<a name="l00249"></a>00249 }
<a name="l00250"></a>00250 
<a name="l00251"></a>00251 <span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span>
<a name="l00252"></a>00252 <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,
<a name="l00253"></a>00253                 <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *buffer)
<a name="l00254"></a>00254 {
<a name="l00255"></a>00255         nc_get_varm_uchar(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, <a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">STRIDE</a>, imap, buffer);
<a name="l00256"></a>00256 }
<a name="l00257"></a>00257 
<a name="l00258"></a>00258 <span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span>
<a name="l00259"></a>00259 <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,
<a name="l00260"></a>00260                 <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">int</span> *buffer)
<a name="l00261"></a>00261 {
<a name="l00262"></a>00262         nc_get_varm_int(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, <a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">STRIDE</a>, imap, buffer);
<a name="l00263"></a>00263 }
<a name="l00264"></a>00264 
<a name="l00265"></a>00265 <span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span>
<a name="l00266"></a>00266 <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,
<a name="l00267"></a>00267                 <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">long</span> *buffer)
<a name="l00268"></a>00268 {
<a name="l00269"></a>00269         nc_get_varm_long(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, <a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">STRIDE</a>, imap, buffer);
<a name="l00270"></a>00270 }
<a name="l00271"></a>00271 
<a name="l00272"></a>00272 <span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span>
<a name="l00273"></a>00273 <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,
<a name="l00274"></a>00274                 <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">float</span> *buffer)
<a name="l00275"></a>00275 {
<a name="l00276"></a>00276         nc_get_varm_float(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, <a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">STRIDE</a>, imap, buffer);
<a name="l00277"></a>00277 }
<a name="l00278"></a>00278 
<a name="l00279"></a>00279 <span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span>
<a name="l00280"></a>00280 <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,
<a name="l00281"></a>00281                 <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">double</span> *buffer)
<a name="l00282"></a>00282 {
<a name="l00283"></a>00283         nc_get_varm_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, <a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">STRIDE</a>, imap, buffer);
<a name="l00284"></a>00284 }
<a name="l00285"></a>00285 
<a name="l00286"></a>00286 <span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span>
<a name="l00287"></a>00287 <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abc045f60e2f43534e3fe745974cd359a">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,
<a name="l00288"></a>00288                 <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">void</span> *buffer)
<a name="l00289"></a>00289 {
<a name="l00290"></a>00290         nc_get_varm(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, <a class="code" href="classio_1_1NetCdfReader.xhtml#a4a44571fccd1118694f37312e2e8b662">STRIDE</a>, imap, buffer);
<a name="l00291"></a>00291 }
<a name="l00292"></a>00292 
<a name="l00293"></a>00293 }
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 <span class="preprocessor">#endif // IO_NETCDF_H</span>
</pre></div></div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
