<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>ASAGI: io/netcdfreader.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">0.5</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_bc161955dc3a3d2485839eba21420d01.xhtml">io</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">netcdfreader.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="netcdfreader_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#ifndef IO_NETCDFREADER_H</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#define IO_NETCDFREADER_H</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="asagi_8h.xhtml">asagi.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;limits&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;mutex&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#ifndef ASAGI_NOMPI</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#ifndef MPI_INCLUDED</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#define MPI_INCLUDED</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#define MPI_INCLUDED_NETCDF</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#endif // MPI_INCLUDED</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#endif // ASAGI_NOMPI</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#include &lt;netcdf.h&gt;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#ifdef MPI_INCLUDED_NETCDF</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#undef MPI_INCLUDED</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#undef MPI_INCLUDED_NETCDF</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#endif // MPI_INCLUDED_NETCDF</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="threads_2mutex_8h.xhtml">threads/mutex.h</a>&quot;</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="namespaceio.xhtml">   70</a></span>&#160;<span class="keyword">namespace </span>io</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml">   76</a></span>&#160;<span class="keyword">class </span><a class="code" href="classio_1_1NetCdfReader.xhtml">NetCdfReader</a></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#aac18597d812d4b331f839bb56ac07539">   80</a></span>&#160;        std::string <a class="code" href="classio_1_1NetCdfReader.xhtml#aac18597d812d4b331f839bb56ac07539">m_filename</a>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#ab034554ff6c37e813df2d863a5faaaec">   83</a></span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#ab034554ff6c37e813df2d863a5faaaec">m_rank</a>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">   86</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">   89</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a535e4eba969b70079719c4f1183b2efc">   92</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a535e4eba969b70079719c4f1183b2efc">m_varSize</a>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">   95</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a24b6bd3bc2b7fdfc0b356c333aba3676">   98</a></span>&#160;        std::string* <a class="code" href="classio_1_1NetCdfReader.xhtml#a24b6bd3bc2b7fdfc0b356c333aba3676">m_names</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a6356024b6e9b7e7a2bc994335f80a0c6">  101</a></span>&#160;        <span class="keywordtype">size_t</span>* <a class="code" href="classio_1_1NetCdfReader.xhtml#a6356024b6e9b7e7a2bc994335f80a0c6">m_size</a>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// Must be declared before the functions</span></div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a4c5c0e8aafe666ee055003848e070a0f">  104</a></span>&#160;        <span class="keyword">static</span> <a class="code" href="classthreads_1_1PthreadMutex.xhtml">threads::Mutex</a> <a class="code" href="classio_1_1NetCdfReader.xhtml#a4c5c0e8aafe666ee055003848e070a0f">netcdfLock</a>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="classio_1_1NetCdfReader.xhtml#a9882fb2392440292d50ba0fac22a73a5">NetCdfReader</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename, <span class="keywordtype">int</span> rank);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keyword">virtual</span> ~<a class="code" href="classio_1_1NetCdfReader.xhtml">NetCdfReader</a>();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> <a class="code" href="classio_1_1NetCdfReader.xhtml#ac32833419444f4454aae03c783cbfe6c">open</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* varname = <span class="stringliteral">&quot;z&quot;</span>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        </div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#afff7b97428069e57783c3984951058b5">  116</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#afff7b97428069e57783c3984951058b5">isOpen</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a> &lt; 0;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        </div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a4b845919f62147f0ba3e49a1a0e27f45">  124</a></span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a4b845919f62147f0ba3e49a1a0e27f45">dimensions</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        </div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">  132</a></span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(<span class="keywordtype">int</span> i)<span class="keyword"> const</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="keywordflow">if</span> (i &gt;= <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                        <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a6356024b6e9b7e7a2bc994335f80a0c6">m_size</a>[i];</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#aade32be70ae583d4ab0785469540f246">  142</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#aade32be70ae583d4ab0785469540f246">getOffset</a>(<span class="keywordtype">int</span> i)<span class="keyword"> const</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="keywordflow">if</span> (i &gt;= <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                std::lock_guard&lt;threads::Mutex&gt; lock(<a class="code" href="classio_1_1NetCdfReader.xhtml#a4c5c0e8aafe666ee055003848e070a0f">netcdfLock</a>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordtype">int</span> x;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">if</span> (nc_inq_varid(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a24b6bd3bc2b7fdfc0b356c333aba3676">m_names</a>[i].c_str(), &amp;x) != NC_NOERR)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="keywordtype">double</span> result;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordtype">size_t</span> index = 0;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                nc_get_var1_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, x, &amp;index, &amp;result);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        </div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a9abeef82ea162ea83746093a048ea4ab">  162</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a9abeef82ea162ea83746093a048ea4ab">getScaling</a>(<span class="keywordtype">int</span> i)<span class="keyword"> const</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="keywordflow">if</span> (i &gt;= <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                        <span class="keywordflow">return</span> 0.;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> size = <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(i);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">if</span> (size == 1)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                        <span class="keywordflow">return</span> std::numeric_limits&lt;double&gt;::infinity();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                std::lock_guard&lt;threads::Mutex&gt; lock(<a class="code" href="classio_1_1NetCdfReader.xhtml#a4c5c0e8aafe666ee055003848e070a0f">netcdfLock</a>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordtype">int</span> x;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="keywordflow">if</span> (nc_inq_varid(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a24b6bd3bc2b7fdfc0b356c333aba3676">m_names</a>[i].c_str(), &amp;x) != NC_NOERR)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                        <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="keywordtype">double</span> first, last;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="keywordtype">size_t</span> index = 0;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                nc_get_var1_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, x, &amp;index, &amp;first);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                index = size - 1;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                nc_get_var1_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, x, &amp;index, &amp;last);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="keywordflow">return</span> (last - first) / (size - 1);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a662efad5046abfec9dc52455a74f1e0a">  195</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a662efad5046abfec9dc52455a74f1e0a">getBlock</a>(<span class="keywordtype">void</span> *block,</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset,</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size)</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <span class="comment">// Make sure we do not read more than the available data</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <span class="comment">// in each dimension</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                <span class="keywordtype">size_t</span> actSize[MAX_DIMENSIONS];</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>; i++) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                        <span class="keywordflow">if</span> (offset[i] + size[i] &gt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(i))</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                actSize[i] = <a class="code" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a>(i) - offset[i];</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                actSize[i] = size[i];</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <span class="comment">// The distance between 2 values in the internal representation</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                ptrdiff_t imap[MAX_DIMENSIONS];</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                imap[m_dimensions-1] = 1;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = m_dimensions-2; i &gt;= 0; i--)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        imap[i] = imap[i+1] * size[i+1];</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                std::lock_guard&lt;threads::Mutex&gt; lock(<a class="code" href="classio_1_1NetCdfReader.xhtml#a4c5c0e8aafe666ee055003848e070a0f">netcdfLock</a>);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">getVar</a>(offset, actSize, size, imap,</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                        static_cast&lt;T*&gt;(block));</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        </div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">  223</a></span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">getVarSize</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a535e4eba969b70079719c4f1183b2efc">m_varSize</a>;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *blockSize, <span class="keyword">const</span> ptrdiff_t *imap, T *buffer);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;};</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span></div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#acac7b2985a7566f58aa9c3bffa6a6e7a">  247</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *blockSize, <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *buffer)</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;{</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        nc_get_varm_uchar(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, 0L, imap, buffer);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;}</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span></div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a31a540ead755f334ba1e584d463d7ddf">  257</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *blockSize, <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">int</span> *buffer)</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;{</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        nc_get_varm_int(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, 0L, imap, buffer);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;}</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span></div>
<div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a70f0d075377448a1a2b2f38cf38b5e3b">  267</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *blockSize, <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">long</span> *buffer)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;{</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        nc_get_varm_long(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, 0L, imap, buffer);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;}</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span></div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#a82a1e6a5a3a6772db749ac40e49a7cf8">  277</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *blockSize, <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">float</span> *buffer)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;{</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        nc_get_varm_float(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, 0L, imap, buffer);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span></div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#ae05adb88053ae5c7baf896aa0c2913dd">  287</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *blockSize, <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">double</span> *buffer)</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;{</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        nc_get_varm_double(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, 0L, imap, buffer);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">template</span>&lt;&gt; <span class="keyword">inline</span></div>
<div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="classio_1_1NetCdfReader.xhtml#af151b60baa491b366dcdcd46dbc5cbc1">  297</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">NetCdfReader::getVar</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> *offset, <span class="keyword">const</span> <span class="keywordtype">size_t</span> *size,</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">size_t</span> *blockSize, <span class="keyword">const</span> ptrdiff_t *imap, <span class="keywordtype">void</span> *buffer)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;{</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="comment">// Read the data unmapped (netCDF does not support mapping for non-builtin data types)</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        nc_get_vara(<a class="code" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a>, <a class="code" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a>, offset, size, buffer);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="comment">// Mapping required?</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordtype">bool</span> doMapping = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>; i++)</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="keywordflow">if</span> (size[i] != blockSize[i])</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        doMapping = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">if</span> (!doMapping)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="comment">// Apply mapping ...</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordtype">char</span>* byteBuf = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(buffer);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="comment">// Compute initial indices and position</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordtype">long</span> pos[MAX_DIMENSIONS];</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordtype">long</span> indexFile = 1;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>; i++) {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                pos[i] = size[i]-1;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                indexFile *= size[i];</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="keywordtype">size_t</span> indexBuf = size[0]-1;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt; <a class="code" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a>; i++) {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                indexBuf *= blockSize[i];</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                indexBuf += size[i]-1;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="comment">// Loop over all elements</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">for</span> (indexFile--; indexFile &gt;= 0 &amp;&amp; indexFile &lt; static_cast&lt;long&gt;(indexBuf); indexFile--) {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                memcpy(&amp;byteBuf[indexBuf * <a class="code" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">getVarSize</a>()],</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                &amp;byteBuf[indexFile * <a class="code" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">getVarSize</a>()],</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                <a class="code" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">getVarSize</a>());</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="comment">// Adjust the actual position</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                pos[m_dimensions-1]--;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                indexBuf--;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = m_dimensions-1; pos[i] &lt; 0 &amp;&amp; i &gt; 0; i--) {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                        pos[i-1]--;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                        pos[i] = size[i]-1;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                        indexBuf -= imap[i-1];</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                        indexBuf += imap[i] * size[i];</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;}</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="preprocessor">#endif // IO_NETCDFREADER_H</span></div>
<div class="ttc" id="group__cxx__interface_xhtml_gac1191f4df7554b1b99e515962ebc2bb5"><div class="ttname"><a href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a></div><div class="ttdeci">Error</div><div class="ttdef"><b>Definition:</b> <a href="asagi_8h_source.xhtml#l00092">asagi.h:92</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a9882fb2392440292d50ba0fac22a73a5"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a9882fb2392440292d50ba0fac22a73a5">io::NetCdfReader::NetCdfReader</a></div><div class="ttdeci">NetCdfReader(const char *filename, int rank)</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8cpp_source.xhtml#l00046">netcdfreader.cpp:46</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a4c5c0e8aafe666ee055003848e070a0f"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a4c5c0e8aafe666ee055003848e070a0f">io::NetCdfReader::netcdfLock</a></div><div class="ttdeci">static threads::Mutex netcdfLock</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00104">netcdfreader.h:104</a></div></div>
<div class="ttc" id="threads_2mutex_8h_xhtml"><div class="ttname"><a href="threads_2mutex_8h.xhtml">mutex.h</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a6356024b6e9b7e7a2bc994335f80a0c6"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a6356024b6e9b7e7a2bc994335f80a0c6">io::NetCdfReader::m_size</a></div><div class="ttdeci">size_t * m_size</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00101">netcdfreader.h:101</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_ab034554ff6c37e813df2d863a5faaaec"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#ab034554ff6c37e813df2d863a5faaaec">io::NetCdfReader::m_rank</a></div><div class="ttdeci">const int m_rank</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00083">netcdfreader.h:83</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a4b845919f62147f0ba3e49a1a0e27f45"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a4b845919f62147f0ba3e49a1a0e27f45">io::NetCdfReader::dimensions</a></div><div class="ttdeci">unsigned int dimensions() const </div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00124">netcdfreader.h:124</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a662efad5046abfec9dc52455a74f1e0a"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a662efad5046abfec9dc52455a74f1e0a">io::NetCdfReader::getBlock</a></div><div class="ttdeci">void getBlock(void *block, const size_t *offset, const size_t *size)</div><div class="ttdoc">Reads a block of cells from the netcdf file. The type is converted to T. </div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00195">netcdfreader.h:195</a></div></div>
<div class="ttc" id="asagi_8h_xhtml"><div class="ttname"><a href="asagi_8h.xhtml">asagi.h</a></div><div class="ttdoc">Include file for C and C++ API. </div></div>
<div class="ttc" id="classthreads_1_1PthreadMutex_xhtml"><div class="ttname"><a href="classthreads_1_1PthreadMutex.xhtml">threads::PthreadMutex</a></div><div class="ttdef"><b>Definition:</b> <a href="pthreadmutex_8h_source.xhtml#l00053">pthreadmutex.h:53</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_ae2a4bc9153e6eadd9c9697cfb853843b"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">io::NetCdfReader::m_file</a></div><div class="ttdeci">int m_file</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00086">netcdfreader.h:86</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a535e4eba969b70079719c4f1183b2efc"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a535e4eba969b70079719c4f1183b2efc">io::NetCdfReader::m_varSize</a></div><div class="ttdeci">size_t m_varSize</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00092">netcdfreader.h:92</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml">io::NetCdfReader</a></div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00076">netcdfreader.h:76</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a8cb71e3f44f6f352ca2c10a6bc0e0493"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">io::NetCdfReader::m_variable</a></div><div class="ttdeci">int m_variable</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00089">netcdfreader.h:89</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_abd037bf89ad705ecf5eeab853cea251f"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">io::NetCdfReader::getVarSize</a></div><div class="ttdeci">unsigned int getVarSize() const </div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00223">netcdfreader.h:223</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a0faf25babf0351b6773e15833012e51c"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">io::NetCdfReader::getVar</a></div><div class="ttdeci">void getVar(const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, T *buffer)</div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a75aedf0a90e63ff36e17349c80106c2c"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">io::NetCdfReader::getSize</a></div><div class="ttdeci">unsigned long getSize(int i) const </div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00132">netcdfreader.h:132</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a9abeef82ea162ea83746093a048ea4ab"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a9abeef82ea162ea83746093a048ea4ab">io::NetCdfReader::getScaling</a></div><div class="ttdeci">double getScaling(int i) const </div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00162">netcdfreader.h:162</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_aac18597d812d4b331f839bb56ac07539"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#aac18597d812d4b331f839bb56ac07539">io::NetCdfReader::m_filename</a></div><div class="ttdeci">std::string m_filename</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00080">netcdfreader.h:80</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a0131b1dc06f5d43730c1ac35d5496525"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">io::NetCdfReader::m_dimensions</a></div><div class="ttdeci">int m_dimensions</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00095">netcdfreader.h:95</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_afff7b97428069e57783c3984951058b5"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#afff7b97428069e57783c3984951058b5">io::NetCdfReader::isOpen</a></div><div class="ttdeci">bool isOpen() const </div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00116">netcdfreader.h:116</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_aade32be70ae583d4ab0785469540f246"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#aade32be70ae583d4ab0785469540f246">io::NetCdfReader::getOffset</a></div><div class="ttdeci">double getOffset(int i) const </div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00142">netcdfreader.h:142</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_ac32833419444f4454aae03c783cbfe6c"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#ac32833419444f4454aae03c783cbfe6c">io::NetCdfReader::open</a></div><div class="ttdeci">asagi::Grid::Error open(const char *varname=&quot;z&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8cpp_source.xhtml#l00073">netcdfreader.cpp:73</a></div></div>
<div class="ttc" id="classio_1_1NetCdfReader_xhtml_a24b6bd3bc2b7fdfc0b356c333aba3676"><div class="ttname"><a href="classio_1_1NetCdfReader.xhtml#a24b6bd3bc2b7fdfc0b356c333aba3676">io::NetCdfReader::m_names</a></div><div class="ttdeci">std::string * m_names</div><div class="ttdef"><b>Definition:</b> <a href="netcdfreader_8h_source.xhtml#l00098">netcdfreader.h:98</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
