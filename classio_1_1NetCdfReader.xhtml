<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>ASAGI: io::NetCdfReader Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="asagi.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">ASAGI
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">a pArallel Server for Adaptive GeoInformation</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceio.xhtml">io</a></li><li class="navelem"><a class="el" href="classio_1_1NetCdfReader.xhtml">NetCdfReader</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="classio_1_1NetCdfReader-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">io::NetCdfReader Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for io::NetCdfReader:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classio_1_1NetCdfReader__coll__graph.svg" width="292" height="251"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9882fb2392440292d50ba0fac22a73a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a9882fb2392440292d50ba0fac22a73a5">NetCdfReader</a> (const char *filename, int rank)</td></tr>
<tr class="separator:a9882fb2392440292d50ba0fac22a73a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac32833419444f4454aae03c783cbfe6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#ac32833419444f4454aae03c783cbfe6c">open</a> (const char *varname=&quot;z&quot;)</td></tr>
<tr class="separator:ac32833419444f4454aae03c783cbfe6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afff7b97428069e57783c3984951058b5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#afff7b97428069e57783c3984951058b5">isOpen</a> () const </td></tr>
<tr class="separator:afff7b97428069e57783c3984951058b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b845919f62147f0ba3e49a1a0e27f45"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a4b845919f62147f0ba3e49a1a0e27f45">dimensions</a> () const </td></tr>
<tr class="separator:a4b845919f62147f0ba3e49a1a0e27f45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75aedf0a90e63ff36e17349c80106c2c"><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a75aedf0a90e63ff36e17349c80106c2c">getSize</a> (int i) const </td></tr>
<tr class="separator:a75aedf0a90e63ff36e17349c80106c2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aade32be70ae583d4ab0785469540f246"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#aade32be70ae583d4ab0785469540f246">getOffset</a> (int i) const </td></tr>
<tr class="separator:aade32be70ae583d4ab0785469540f246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9abeef82ea162ea83746093a048ea4ab"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a9abeef82ea162ea83746093a048ea4ab">getScaling</a> (int i) const </td></tr>
<tr class="separator:a9abeef82ea162ea83746093a048ea4ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a662efad5046abfec9dc52455a74f1e0a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a662efad5046abfec9dc52455a74f1e0a"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a662efad5046abfec9dc52455a74f1e0a">getBlock</a> (void *block, const size_t *offset, const size_t *size)</td></tr>
<tr class="memdesc:a662efad5046abfec9dc52455a74f1e0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a block of cells from the netcdf file. The type is converted to T.  <a href="#a662efad5046abfec9dc52455a74f1e0a">More...</a><br /></td></tr>
<tr class="separator:a662efad5046abfec9dc52455a74f1e0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd037bf89ad705ecf5eeab853cea251f"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#abd037bf89ad705ecf5eeab853cea251f">getVarSize</a> () const </td></tr>
<tr class="separator:abd037bf89ad705ecf5eeab853cea251f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acac7b2985a7566f58aa9c3bffa6a6e7a"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:acac7b2985a7566f58aa9c3bffa6a6e7a"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#acac7b2985a7566f58aa9c3bffa6a6e7a">getVar</a> (const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, unsigned char *buffer)</td></tr>
<tr class="separator:acac7b2985a7566f58aa9c3bffa6a6e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31a540ead755f334ba1e584d463d7ddf"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a31a540ead755f334ba1e584d463d7ddf"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a31a540ead755f334ba1e584d463d7ddf">getVar</a> (const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, int *buffer)</td></tr>
<tr class="separator:a31a540ead755f334ba1e584d463d7ddf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70f0d075377448a1a2b2f38cf38b5e3b"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a70f0d075377448a1a2b2f38cf38b5e3b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a70f0d075377448a1a2b2f38cf38b5e3b">getVar</a> (const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, long *buffer)</td></tr>
<tr class="separator:a70f0d075377448a1a2b2f38cf38b5e3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82a1e6a5a3a6772db749ac40e49a7cf8"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a82a1e6a5a3a6772db749ac40e49a7cf8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a82a1e6a5a3a6772db749ac40e49a7cf8">getVar</a> (const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, float *buffer)</td></tr>
<tr class="separator:a82a1e6a5a3a6772db749ac40e49a7cf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae05adb88053ae5c7baf896aa0c2913dd"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ae05adb88053ae5c7baf896aa0c2913dd"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#ae05adb88053ae5c7baf896aa0c2913dd">getVar</a> (const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, double *buffer)</td></tr>
<tr class="separator:ae05adb88053ae5c7baf896aa0c2913dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af151b60baa491b366dcdcd46dbc5cbc1"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:af151b60baa491b366dcdcd46dbc5cbc1"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#af151b60baa491b366dcdcd46dbc5cbc1">getVar</a> (const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, void *buffer)</td></tr>
<tr class="separator:af151b60baa491b366dcdcd46dbc5cbc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a0faf25babf0351b6773e15833012e51c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a0faf25babf0351b6773e15833012e51c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a0faf25babf0351b6773e15833012e51c">getVar</a> (const size_t *offset, const size_t *size, const size_t *blockSize, const ptrdiff_t *imap, T *buffer)</td></tr>
<tr class="separator:a0faf25babf0351b6773e15833012e51c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:aac18597d812d4b331f839bb56ac07539"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#aac18597d812d4b331f839bb56ac07539">m_filename</a></td></tr>
<tr class="separator:aac18597d812d4b331f839bb56ac07539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab034554ff6c37e813df2d863a5faaaec"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#ab034554ff6c37e813df2d863a5faaaec">m_rank</a></td></tr>
<tr class="separator:ab034554ff6c37e813df2d863a5faaaec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2a4bc9153e6eadd9c9697cfb853843b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#ae2a4bc9153e6eadd9c9697cfb853843b">m_file</a></td></tr>
<tr class="separator:ae2a4bc9153e6eadd9c9697cfb853843b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cb71e3f44f6f352ca2c10a6bc0e0493"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a8cb71e3f44f6f352ca2c10a6bc0e0493">m_variable</a></td></tr>
<tr class="separator:a8cb71e3f44f6f352ca2c10a6bc0e0493"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a535e4eba969b70079719c4f1183b2efc"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a535e4eba969b70079719c4f1183b2efc">m_varSize</a></td></tr>
<tr class="separator:a535e4eba969b70079719c4f1183b2efc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0131b1dc06f5d43730c1ac35d5496525"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a0131b1dc06f5d43730c1ac35d5496525">m_dimensions</a></td></tr>
<tr class="separator:a0131b1dc06f5d43730c1ac35d5496525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24b6bd3bc2b7fdfc0b356c333aba3676"><td class="memItemLeft" align="right" valign="top">std::string *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a24b6bd3bc2b7fdfc0b356c333aba3676">m_names</a></td></tr>
<tr class="separator:a24b6bd3bc2b7fdfc0b356c333aba3676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6356024b6e9b7e7a2bc994335f80a0c6"><td class="memItemLeft" align="right" valign="top">size_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a6356024b6e9b7e7a2bc994335f80a0c6">m_size</a></td></tr>
<tr class="separator:a6356024b6e9b7e7a2bc994335f80a0c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:a4c5c0e8aafe666ee055003848e070a0f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classthreads_1_1PthreadMutex.xhtml">threads::Mutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classio_1_1NetCdfReader.xhtml#a4c5c0e8aafe666ee055003848e070a0f">netcdfLock</a></td></tr>
<tr class="separator:a4c5c0e8aafe666ee055003848e070a0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Provides access to <b>one</b> grid in a netCDF file </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00076">76</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9882fb2392440292d50ba0fac22a73a5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">io::NetCdfReader::NetCdfReader </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rank</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>The name of the netcdf file </td></tr>
    <tr><td class="paramname">rank</td><td>The rank of this MPI process </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="netcdfreader_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="netcdfreader_8cpp_source.xhtml">netcdfreader.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a4b845919f62147f0ba3e49a1a0e27f45"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int io::NetCdfReader::dimensions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of dimensions </dd></dl>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00124">124</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a662efad5046abfec9dc52455a74f1e0a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getBlock </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>block</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a block of cells from the netcdf file. The type is converted to T. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">block</td><td>The buffer where the values are written to </td></tr>
    <tr><td class="paramname">offset</td><td>Offset of the block (at least <a class="el" href="classio_1_1NetCdfReader.xhtml#a4b845919f62147f0ba3e49a1a0e27f45">values</a> values) </td></tr>
    <tr><td class="paramname">size</td><td>Size of the block (at least <a class="el" href="classio_1_1NetCdfReader.xhtml#a4b845919f62147f0ba3e49a1a0e27f45">dimensions()</a> values) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00195">195</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="aade32be70ae583d4ab0785469540f246"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double io::NetCdfReader::getOffset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The offset of the grid in i-th direction </dd></dl>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00142">142</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9abeef82ea162ea83746093a048ea4ab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double io::NetCdfReader::getScaling </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The scaling (the real distance between two cells) in i-th direction </dd></dl>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00162">162</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a75aedf0a90e63ff36e17349c80106c2c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long io::NetCdfReader::getSize </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The size of the grid in i-th direction </dd></dl>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00132">132</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0faf25babf0351b6773e15833012e51c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getVar </td>
          <td>(</td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ptrdiff_t *&#160;</td>
          <td class="paramname"><em>imap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Reads a hyperslab from the netCDF file</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">offset</td><td>The offset in the netCDF file </td></tr>
    <tr><td class="paramname">size</td><td>The number of elements that should be red in each dimension </td></tr>
    <tr><td class="paramname">blockSize</td><td>The size of the memory block </td></tr>
    <tr><td class="paramname">imap</td><td>The netCDF mapping parameter </td></tr>
    <tr><td class="paramname">buffer</td><td>The buffer for the block </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acac7b2985a7566f58aa9c3bffa6a6e7a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getVar </td>
          <td>(</td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ptrdiff_t *&#160;</td>
          <td class="paramname"><em>imap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00247">247</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a31a540ead755f334ba1e584d463d7ddf"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getVar </td>
          <td>(</td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ptrdiff_t *&#160;</td>
          <td class="paramname"><em>imap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00257">257</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a70f0d075377448a1a2b2f38cf38b5e3b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getVar </td>
          <td>(</td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ptrdiff_t *&#160;</td>
          <td class="paramname"><em>imap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long *&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00267">267</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a82a1e6a5a3a6772db749ac40e49a7cf8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getVar </td>
          <td>(</td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ptrdiff_t *&#160;</td>
          <td class="paramname"><em>imap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00277">277</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae05adb88053ae5c7baf896aa0c2913dd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getVar </td>
          <td>(</td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ptrdiff_t *&#160;</td>
          <td class="paramname"><em>imap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00287">287</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="af151b60baa491b366dcdcd46dbc5cbc1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void io::NetCdfReader::getVar </td>
          <td>(</td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ptrdiff_t *&#160;</td>
          <td class="paramname"><em>imap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00297">297</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="abd037bf89ad705ecf5eeab853cea251f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int io::NetCdfReader::getVarSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The size of one cell in bytes </dd></dl>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00223">223</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="afff7b97428069e57783c3984951058b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool io::NetCdfReader::isOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><code>True</code> if the netcdf file is opened, <code>false</code> otherwise </dd></dl>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00116">116</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac32833419444f4454aae03c783cbfe6c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__cxx__interface.xhtml#gac1191f4df7554b1b99e515962ebc2bb5">asagi::Grid::Error</a> io::NetCdfReader::open </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>varname</em> = <code>&quot;z&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Opens the netcdf file and reads the header information</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">varname</td><td>The name of the netcdf variable that should be read later </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="netcdfreader_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="netcdfreader_8cpp_source.xhtml">netcdfreader.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a0131b1dc06f5d43730c1ac35d5496525"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int io::NetCdfReader::m_dimensions</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Number of dimension in the netCDF file </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00095">95</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae2a4bc9153e6eadd9c9697cfb853843b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int io::NetCdfReader::m_file</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The file (netCDF file id), this class will work on </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00086">86</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="aac18597d812d4b331f839bb56ac07539"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string io::NetCdfReader::m_filename</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The name of the netcdf file </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00080">80</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a24b6bd3bc2b7fdfc0b356c333aba3676"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string* io::NetCdfReader::m_names</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The name of the dimensions in the netCDF file </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00098">98</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab034554ff6c37e813df2d863a5faaaec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int io::NetCdfReader::m_rank</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>MPI rank </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00083">83</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6356024b6e9b7e7a2bc994335f80a0c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t* io::NetCdfReader::m_size</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The size of the dimensions in the netCDF file </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00101">101</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8cb71e3f44f6f352ca2c10a6bc0e0493"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int io::NetCdfReader::m_variable</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The variable we read </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00089">89</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a535e4eba969b70079719c4f1183b2efc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t io::NetCdfReader::m_varSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The size of the dimensions in the netCDF file </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00092">92</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4c5c0e8aafe666ee055003848e070a0f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classthreads_1_1PthreadMutex.xhtml">threads::Mutex</a> io::NetCdfReader::netcdfLock</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Make netCDF accesses thread safe </p>

<p>Definition at line <a class="el" href="netcdfreader_8h_source.xhtml#l00104">104</a> of file <a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>io/<a class="el" href="netcdfreader_8h_source.xhtml">netcdfreader.h</a></li>
<li>io/<a class="el" href="netcdfreader_8cpp_source.xhtml">netcdfreader.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.7
</small></address>
</body>
</html>
